{"ast":null,"code":"var _jsxFileName = \"/home/sirine/react/client/src/components/ChannelSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { SearchIcon } from '../assets/SearchIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelSearch = () => {\n  _s();\n\n  const {\n    client,\n    setActiveChannel\n  } = useChatContext();\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [teamChannels, setTeamChannels] = useState([]);\n  const [directChannels, setDirectChannels] = useState([]);\n\n  const getChannels = async text => {\n    try {//commentaire       \n    } catch (error) {\n      setQuery('');\n    }\n  };\n\n  useEffect(() => {\n    if (!query) {\n      setTeamChannels([]);\n      setDirectChannels([]);\n    }\n  }, [query]);\n\n  const onSearch = event => {\n    event.preventDefault();\n    setLoading(true);\n    setQuery(event.target.value);\n    getChannels(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-search__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-search__input__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-serach__input__icon\",\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"channel-search__input__text\",\n        placeholder: \"Search\",\n        type: \"text\",\n        value: query,\n        onChange: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChannelSearch, \"BmvJQUMKP1VdRC1U80mpHY6vzPA=\", false, function () {\n  return [useChatContext];\n});\n\n_c = ChannelSearch;\nexport default ChannelSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelSearch\");","map":{"version":3,"sources":["/home/sirine/react/client/src/components/ChannelSearch.jsx"],"names":["React","useState","useEffect","useChatContext","SearchIcon","ChannelSearch","client","setActiveChannel","query","setQuery","loading","setLoading","teamChannels","setTeamChannels","directChannels","setDirectChannels","getChannels","text","error","onSearch","event","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA+BJ,cAAc,EAAnD;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMe,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAC/B,QAAI,CACA;AAEC,KAHL,CAID,OAAOC,KAAP,EAAc;AACVT,MAAAA,QAAQ,CAAC,EAAD,CAAR;AAEH;AACJ,GATD;;AAWAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACM,KAAJ,EAAW;AACPK,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH;AACJ,GALQ,EAKN,CAACP,KAAD,CALM,CAAT;;AAOJ,QAAMW,QAAQ,GAAIC,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACC,cAAN;AAEAV,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAACW,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;AACAP,IAAAA,WAAW,CAACI,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAX;AACH,GAND;;AAQE,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,8BACQ;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADR,eAIQ;AACI,QAAA,SAAS,EAAC,6BADd;AAEI,QAAA,WAAW,EAAC,QAFhB;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,KAAK,EAAEf,KAJX;AAKI,QAAA,QAAQ,EAAEW;AALd;AAAA;AAAA;AAAA;AAAA,cAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjDD;;GAAMd,a;UACmCF,c;;;KADnCE,a;AAmDN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport { SearchIcon } from '../assets/SearchIcon';\n\n\nconst ChannelSearch = () => {\n    const { client, setActiveChannel } = useChatContext();\n    const [query, setQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [teamChannels, setTeamChannels] = useState([])\n    const [directChannels, setDirectChannels] = useState([])\n\n    const getChannels = async (text) => {\n         try {\n             //commentaire       \n      \n             }\n        catch (error) {\n            setQuery('')\n\n        }\n    }\n\n    useEffect(() => {\n        if(!query) {\n            setTeamChannels([]);\n            setDirectChannels([]);\n        }\n    }, [query])\n\nconst onSearch = (event) => {\n    event.preventDefault();\n\n    setLoading(true);\n    setQuery(event.target.value);\n    getChannels(event.target.value)\n}\n\n  return (\n    <div className=\"channel-search__container\">\n        <div className=\"channel-search__input__wrapper\">\n                <div className=\"channel-serach__input__icon\">\n                    <SearchIcon />\n                </div>\n                <input \n                    className=\"channel-search__input__text\" \n                    placeholder=\"Search\" \n                    type=\"text\" \n                    value={query}  \n                    onChange={onSearch}\n                />\n        </div>\n    </div>\n  )\n}\n\nexport default ChannelSearch"]},"metadata":{},"sourceType":"module"}