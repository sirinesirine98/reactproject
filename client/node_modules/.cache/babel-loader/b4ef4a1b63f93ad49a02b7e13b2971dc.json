{"ast":null,"code":"var _jsxFileName = \"/home/sirine/react/client/src/components/TeamChannelPreview.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TeamChannelPreview = (channel, type) => {\n  _s();\n\n  const {\n    channel: activeChannel,\n    client\n  } = useChatContext();\n\n  const ChannelPreview = () => {\n    var _channel$data, _channel$data2;\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-preview__item\",\n      children: [\"# \", (channel === null || channel === void 0 ? void 0 : (_channel$data = channel.data) === null || _channel$data === void 0 ? void 0 : _channel$data.name) || (channel === null || channel === void 0 ? void 0 : (_channel$data2 = channel.data) === null || _channel$data2 === void 0 ? void 0 : _channel$data2.id)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  };\n\n  const DirectPreview = () => {\n    var _members$, _members$$user, _members$2, _members$2$user, _members$3, _members$3$user, _members$4, _members$4$user, _members$5, _members$5$user;\n\n    const members = Object.values(channel.state.members).filter(_ref => {\n      let {\n        user\n      } = _ref;\n      return user.id !== client.userID;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-preview__item single\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        image: (_members$ = members[0]) === null || _members$ === void 0 ? void 0 : (_members$$user = _members$.user) === null || _members$$user === void 0 ? void 0 : _members$$user.image,\n        name: ((_members$2 = members[0]) === null || _members$2 === void 0 ? void 0 : (_members$2$user = _members$2.user) === null || _members$2$user === void 0 ? void 0 : _members$2$user.fullName) || ((_members$3 = members[0]) === null || _members$3 === void 0 ? void 0 : (_members$3$user = _members$3.user) === null || _members$3$user === void 0 ? void 0 : _members$3$user.id),\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ((_members$4 = members[0]) === null || _members$4 === void 0 ? void 0 : (_members$4$user = _members$4.user) === null || _members$4$user === void 0 ? void 0 : _members$4$user.fullName) || ((_members$5 = members[0]) === null || _members$5 === void 0 ? void 0 : (_members$5$user = _members$5.user) === null || _members$5$user === void 0 ? void 0 : _members$5$user.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: (channel === null || channel === void 0 ? void 0 : channel.id) === (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.id) ? 'channel-preview__wrapper__selected' : 'channel-preview__wrapper',\n    onClick: () => {\n      console.log(channel);\n    },\n    children: type === 'team' ? /*#__PURE__*/_jsxDEV(ChannelPreview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(DirectPreview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 2\n  }, this);\n};\n\n_s(TeamChannelPreview, \"RNfKNcIjMcGRvLZY+ZVgrXscPd8=\", false, function () {\n  return [useChatContext];\n});\n\n_c = TeamChannelPreview;\nexport default TeamChannelPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamChannelPreview\");","map":{"version":3,"sources":["/home/sirine/react/client/src/components/TeamChannelPreview.jsx"],"names":["React","Avatar","useChatContext","TeamChannelPreview","channel","type","activeChannel","client","ChannelPreview","data","name","id","DirectPreview","members","Object","values","state","filter","user","userID","image","fullName","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAkBC,cAAlB,QAAwC,mBAAxC;;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,OAAD,EAAWC,IAAX,KAAoB;AAAA;;AAC3C,QAAM;AAAED,IAAAA,OAAO,EAAEE,aAAX;AAA0BC,IAAAA;AAA1B,MAAqCL,cAAc,EAAzD;;AAEA,QAAMM,cAAc,GAAG;AAAA;;AAAA,wBACnB;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA,uBACO,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,6BAAAA,OAAO,CAAEK,IAAT,gEAAeC,IAAf,MAAuBN,OAAvB,aAAuBA,OAAvB,yCAAuBA,OAAO,CAAEK,IAAhC,mDAAuB,eAAeE,EAAtC,CADP;AAAA;AAAA;AAAA;AAAA;AAAA,YADmB;AAAA,GAAvB;;AAMA,QAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,UAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcX,OAAO,CAACY,KAAR,CAAcH,OAA5B,EAAqCI,MAArC,CAA4C;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aAAcA,IAAI,CAACP,EAAL,KAAYJ,MAAM,CAACY,MAAjC;AAAA,KAA5C,CAAhB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,8BACI,QAAC,MAAD;AACI,QAAA,KAAK,eAAEN,OAAO,CAAC,CAAD,CAAT,gEAAE,UAAYK,IAAd,mDAAE,eAAkBE,KAD7B;AAEI,QAAA,IAAI,EAAE,eAAAP,OAAO,CAAC,CAAD,CAAP,6EAAYK,IAAZ,oEAAkBG,QAAlB,oBAA8BR,OAAO,CAAC,CAAD,CAArC,kEAA8B,WAAYK,IAA1C,oDAA8B,gBAAkBP,EAAhD,CAFV;AAGI,QAAA,IAAI,EAAE;AAHV;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,kBAAI,eAAAE,OAAO,CAAC,CAAD,CAAP,6EAAYK,IAAZ,oEAAkBG,QAAlB,oBAA8BR,OAAO,CAAC,CAAD,CAArC,kEAA8B,WAAYK,IAA1C,oDAA8B,gBAAkBP,EAAhD;AAAJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAbD;;AAeF,sBACD;AAAK,IAAA,SAAS,EACH,CAAAP,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEO,EAAT,OAAgBL,aAAhB,aAAgBA,aAAhB,uBAAgBA,aAAa,CAAEK,EAA/B,IACM,oCADN,GAEM,0BAHjB;AAKO,IAAA,OAAO,EAAE,MAAM;AAEXW,MAAAA,OAAO,CAACC,GAAR,CAAYnB,OAAZ;AACH,KARR;AAAA,cAUQC,IAAI,KAAK,MAAT,gBAAkB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAlB,gBAAuC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAV/C;AAAA;AAAA;AAAA;AAAA,UADC;AAcD,CAtCD;;GAAMF,kB;UACyCD,c;;;KADzCC,kB;AAwCN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport { Avatar , useChatContext } from 'stream-chat-react';\n\nconst TeamChannelPreview = (channel , type) => {\n    const { channel: activeChannel, client } = useChatContext();\n\n    const ChannelPreview = () => (\n        <p className=\"channel-preview__item\">\n            # {channel?.data?.name || channel?.data?.id}\n        </p>\n    );\n\n    const DirectPreview = () => {\n        const members = Object.values(channel.state.members).filter(({ user }) => user.id !== client.userID);\n    \n        return (\n            <div className=\"channel-preview__item single\">\n                <Avatar \n                    image={members[0]?.user?.image}\n                    name={members[0]?.user?.fullName || members[0]?.user?.id}\n                    size={24}\n                />\n                <p>{members[0]?.user?.fullName || members[0]?.user?.id}</p>\n            </div>\n        )\n    }\n\n  return (\n <div className={\n            channel?.id === activeChannel?.id\n                ? 'channel-preview__wrapper__selected'\n                : 'channel-preview__wrapper'\n        }\n        onClick={() => {\n            \n            console.log(channel);\n        }}\n        >\n        {type === 'team' ? <ChannelPreview /> : <DirectPreview />}\n        </div>\n    );\n}\n\nexport default TeamChannelPreview"]},"metadata":{},"sourceType":"module"}