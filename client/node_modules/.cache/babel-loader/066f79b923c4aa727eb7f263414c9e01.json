{"ast":null,"code":"import React from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { CooldownTimer as DefaultCooldownTimer } from './hooks/useCooldownTimer';\nimport { EmojiIconLarge as DefaultEmojiIcon, FileUploadIconFlat as DefaultFileUploadIcon, SendButton as DefaultSendButton } from './icons';\nimport { QuotedMessagePreview as DefaultQuotedMessagePreview } from './QuotedMessagePreview';\nimport { UploadsPreview } from './UploadsPreview';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nexport var MessageInputFlat = function () {\n  var _a = useChannelStateContext('MessageInputFlat'),\n      acceptedFiles = _a.acceptedFiles,\n      multipleUploads = _a.multipleUploads,\n      quotedMessage = _a.quotedMessage;\n\n  var t = useTranslationContext('MessageInputFlat').t;\n\n  var _b = useMessageInputContext('MessageInputFlat'),\n      closeEmojiPicker = _b.closeEmojiPicker,\n      cooldownInterval = _b.cooldownInterval,\n      cooldownRemaining = _b.cooldownRemaining,\n      emojiPickerIsOpen = _b.emojiPickerIsOpen,\n      handleSubmit = _b.handleSubmit,\n      isUploadEnabled = _b.isUploadEnabled,\n      maxFilesLeft = _b.maxFilesLeft,\n      openEmojiPicker = _b.openEmojiPicker,\n      setCooldownRemaining = _b.setCooldownRemaining,\n      uploadNewFiles = _b.uploadNewFiles;\n\n  var _c = useComponentContext('MessageInputFlat'),\n      _d = _c.CooldownTimer,\n      CooldownTimer = _d === void 0 ? DefaultCooldownTimer : _d,\n      _e = _c.EmojiIcon,\n      EmojiIcon = _e === void 0 ? DefaultEmojiIcon : _e,\n      _f = _c.FileUploadIcon,\n      FileUploadIcon = _f === void 0 ? DefaultFileUploadIcon : _f,\n      _g = _c.QuotedMessagePreview,\n      QuotedMessagePreview = _g === void 0 ? DefaultQuotedMessagePreview : _g,\n      _h = _c.SendButton,\n      SendButton = _h === void 0 ? DefaultSendButton : _h;\n\n  return React.createElement(\"div\", {\n    className: \"str-chat__input-flat \" + (SendButton ? 'str-chat__input-flat--send-button-active' : null) + \" \" + (quotedMessage && !quotedMessage.parent_id ? 'str-chat__input-flat-quoted' : null)\n  }, React.createElement(ImageDropzone, {\n    accept: acceptedFiles,\n    disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining,\n    handleFiles: uploadNewFiles,\n    maxNumberOfFiles: maxFilesLeft,\n    multiple: multipleUploads\n  }, quotedMessage && !quotedMessage.parent_id && React.createElement(QuotedMessagePreview, {\n    quotedMessage: quotedMessage\n  }), React.createElement(\"div\", {\n    className: 'str-chat__input-flat-wrapper'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__input-flat--textarea-wrapper'\n  }, isUploadEnabled && React.createElement(UploadsPreview, null), React.createElement(\"div\", {\n    className: 'str-chat__emojiselect-wrapper'\n  }, React.createElement(Tooltip, null, emojiPickerIsOpen ? t('Close emoji picker') : t('Open emoji picker')), React.createElement(\"button\", {\n    \"aria-label\": 'Emoji picker',\n    className: 'str-chat__input-flat-emojiselect',\n    onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker\n  }, cooldownRemaining ? React.createElement(\"div\", {\n    className: 'str-chat__input-flat-cooldown'\n  }, React.createElement(CooldownTimer, {\n    cooldownInterval: cooldownInterval,\n    setCooldownRemaining: setCooldownRemaining\n  })) : React.createElement(EmojiIcon, null))), React.createElement(EmojiPicker, null), React.createElement(ChatAutoComplete, null), isUploadEnabled && !cooldownRemaining && React.createElement(\"div\", {\n    className: 'str-chat__fileupload-wrapper',\n    \"data-testid\": 'fileinput'\n  }, React.createElement(Tooltip, null, maxFilesLeft ? t('Attach files') : t(\"You've reached the maximum number of files\")), React.createElement(FileUploadButton, {\n    accepts: acceptedFiles,\n    disabled: maxFilesLeft === 0,\n    handleFiles: uploadNewFiles,\n    multiple: multipleUploads\n  }, React.createElement(\"span\", {\n    className: 'str-chat__input-flat-fileupload'\n  }, React.createElement(FileUploadIcon, null))))), !cooldownRemaining && React.createElement(SendButton, {\n    sendMessage: handleSubmit\n  }))));\n};","map":{"version":3,"sources":["/home/sirine/react/client/node_modules/stream-chat-react/dist/components/MessageInput/MessageInputFlat.js"],"names":["React","FileUploadButton","ImageDropzone","EmojiPicker","CooldownTimer","DefaultCooldownTimer","EmojiIconLarge","DefaultEmojiIcon","FileUploadIconFlat","DefaultFileUploadIcon","SendButton","DefaultSendButton","QuotedMessagePreview","DefaultQuotedMessagePreview","UploadsPreview","ChatAutoComplete","Tooltip","useChannelStateContext","useTranslationContext","useMessageInputContext","useComponentContext","MessageInputFlat","_a","acceptedFiles","multipleUploads","quotedMessage","t","_b","closeEmojiPicker","cooldownInterval","cooldownRemaining","emojiPickerIsOpen","handleSubmit","isUploadEnabled","maxFilesLeft","openEmojiPicker","setCooldownRemaining","uploadNewFiles","_c","_d","_e","EmojiIcon","_f","FileUploadIcon","_g","_h","createElement","className","parent_id","accept","disabled","handleFiles","maxNumberOfFiles","multiple","onClick","accepts","sendMessage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { EmojiPicker } from './EmojiPicker';\nimport { CooldownTimer as DefaultCooldownTimer } from './hooks/useCooldownTimer';\nimport { EmojiIconLarge as DefaultEmojiIcon, FileUploadIconFlat as DefaultFileUploadIcon, SendButton as DefaultSendButton, } from './icons';\nimport { QuotedMessagePreview as DefaultQuotedMessagePreview } from './QuotedMessagePreview';\nimport { UploadsPreview } from './UploadsPreview';\nimport { ChatAutoComplete } from '../ChatAutoComplete/ChatAutoComplete';\nimport { Tooltip } from '../Tooltip/Tooltip';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useMessageInputContext } from '../../context/MessageInputContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nexport var MessageInputFlat = function () {\n    var _a = useChannelStateContext('MessageInputFlat'), acceptedFiles = _a.acceptedFiles, multipleUploads = _a.multipleUploads, quotedMessage = _a.quotedMessage;\n    var t = useTranslationContext('MessageInputFlat').t;\n    var _b = useMessageInputContext('MessageInputFlat'), closeEmojiPicker = _b.closeEmojiPicker, cooldownInterval = _b.cooldownInterval, cooldownRemaining = _b.cooldownRemaining, emojiPickerIsOpen = _b.emojiPickerIsOpen, handleSubmit = _b.handleSubmit, isUploadEnabled = _b.isUploadEnabled, maxFilesLeft = _b.maxFilesLeft, openEmojiPicker = _b.openEmojiPicker, setCooldownRemaining = _b.setCooldownRemaining, uploadNewFiles = _b.uploadNewFiles;\n    var _c = useComponentContext('MessageInputFlat'), _d = _c.CooldownTimer, CooldownTimer = _d === void 0 ? DefaultCooldownTimer : _d, _e = _c.EmojiIcon, EmojiIcon = _e === void 0 ? DefaultEmojiIcon : _e, _f = _c.FileUploadIcon, FileUploadIcon = _f === void 0 ? DefaultFileUploadIcon : _f, _g = _c.QuotedMessagePreview, QuotedMessagePreview = _g === void 0 ? DefaultQuotedMessagePreview : _g, _h = _c.SendButton, SendButton = _h === void 0 ? DefaultSendButton : _h;\n    return (React.createElement(\"div\", { className: \"str-chat__input-flat \" + (SendButton ? 'str-chat__input-flat--send-button-active' : null) + \" \" + (quotedMessage && !quotedMessage.parent_id ? 'str-chat__input-flat-quoted' : null) },\n        React.createElement(ImageDropzone, { accept: acceptedFiles, disabled: !isUploadEnabled || maxFilesLeft === 0 || !!cooldownRemaining, handleFiles: uploadNewFiles, maxNumberOfFiles: maxFilesLeft, multiple: multipleUploads },\n            quotedMessage && !quotedMessage.parent_id && (React.createElement(QuotedMessagePreview, { quotedMessage: quotedMessage })),\n            React.createElement(\"div\", { className: 'str-chat__input-flat-wrapper' },\n                React.createElement(\"div\", { className: 'str-chat__input-flat--textarea-wrapper' },\n                    isUploadEnabled && React.createElement(UploadsPreview, null),\n                    React.createElement(\"div\", { className: 'str-chat__emojiselect-wrapper' },\n                        React.createElement(Tooltip, null, emojiPickerIsOpen ? t('Close emoji picker') : t('Open emoji picker')),\n                        React.createElement(\"button\", { \"aria-label\": 'Emoji picker', className: 'str-chat__input-flat-emojiselect', onClick: emojiPickerIsOpen ? closeEmojiPicker : openEmojiPicker }, cooldownRemaining ? (React.createElement(\"div\", { className: 'str-chat__input-flat-cooldown' },\n                            React.createElement(CooldownTimer, { cooldownInterval: cooldownInterval, setCooldownRemaining: setCooldownRemaining }))) : (React.createElement(EmojiIcon, null)))),\n                    React.createElement(EmojiPicker, null),\n                    React.createElement(ChatAutoComplete, null),\n                    isUploadEnabled && !cooldownRemaining && (React.createElement(\"div\", { className: 'str-chat__fileupload-wrapper', \"data-testid\": 'fileinput' },\n                        React.createElement(Tooltip, null, maxFilesLeft\n                            ? t('Attach files')\n                            : t(\"You've reached the maximum number of files\")),\n                        React.createElement(FileUploadButton, { accepts: acceptedFiles, disabled: maxFilesLeft === 0, handleFiles: uploadNewFiles, multiple: multipleUploads },\n                            React.createElement(\"span\", { className: 'str-chat__input-flat-fileupload' },\n                                React.createElement(FileUploadIcon, null)))))),\n                !cooldownRemaining && React.createElement(SendButton, { sendMessage: handleSubmit })))));\n};\n"]},"metadata":{},"sourceType":"module"}