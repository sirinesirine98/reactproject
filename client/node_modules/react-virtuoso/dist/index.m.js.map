{"version":3,"file":"index.m.js","sources":["../src/comparators.tsx","../src/loggerSystem.ts","../src/domIOSystem.ts","../src/propsReadySystem.ts","../src/stateFlagsSystem.ts","../src/scrollSeekSystem.ts","../src/AATree.ts","../src/utils/binaryArraySearch.ts","../src/utils/correctItemSize.ts","../src/sizeSystem.ts","../src/scrollToIndexSystem.ts","../src/sizeRangeSystem.ts","../src/windowScrollerSystem.ts","../src/gridSystem.ts","../src/hooks/useSize.ts","../src/hooks/useWindowViewportRect.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/hooks/useChangedChildSizes.ts","../src/hooks/useScrollTop.ts","../src/initialTopMostItemIndexSystem.ts","../src/followOutputSystem.ts","../src/groupedListSystem.ts","../src/listStateSystem.ts","../src/utils/simpleMemoize.ts","../src/initialItemCountSystem.ts","../src/topItemCountSystem.ts","../src/totalListHeightSystem.ts","../src/upwardScrollFixSystem.ts","../src/initialScrollTopSystem.ts","../src/alignToBottomSystem.ts","../src/scrollIntoViewSystem.ts","../src/listSystem.ts","../src/utils/positionStickyCssValue.ts","../src/List.tsx","../src/Grid.tsx","../src/Table.tsx","../src/components.tsx"],"sourcesContent":["import { ListRange } from './interfaces'\n\nexport function tupleComparator(prev: [any, any] | undefined, current: [any, any]) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1])\n}\n\nexport function rangeComparator(prev: ListRange | undefined, next: ListRange) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex)\n}\n","import * as u from '@virtuoso.dev/urx'\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace globalThis {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace window {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n}\nexport interface LogMessage {\n  level: LogLevel\n  message: any\n  label: string\n}\n\nexport type Log = (label: string, message: any, level?: LogLevel) => void\n\nconst CONSOLE_METHOD_MAP = {\n  [LogLevel.DEBUG]: 'debug',\n  [LogLevel.INFO]: 'log',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error',\n} as const\n\nconst getGlobalThis = () => (typeof globalThis === 'undefined' ? window : globalThis)\n\nexport const loggerSystem = u.system(\n  () => {\n    const logLevel = u.statefulStream<LogLevel>(LogLevel.ERROR)\n    const log = u.statefulStream<Log>((label: string, message: any, level: LogLevel = LogLevel.INFO) => {\n      const currentLevel = getGlobalThis()['VIRTUOSO_LOG_LEVEL'] ?? u.getValue(logLevel)\n      if (level >= currentLevel) {\n        // eslint-disable-next-line no-console\n        console[CONSOLE_METHOD_MAP[level]](\n          '%creact-virtuoso: %c%s %o',\n          'color: #0253b3; font-weight: bold',\n          'color: initial',\n          label,\n          message\n        )\n      }\n    })\n\n    return {\n      log,\n      logLevel,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\n\nexport const domIOSystem = u.system(\n  () => {\n    const scrollContainerState = u.stream<[number, number]>()\n    const scrollTop = u.stream<number>()\n    const deviation = u.statefulStream(0)\n    const smoothScrollTargetReached = u.stream<true>()\n    const statefulScrollTop = u.statefulStream(0)\n    const viewportHeight = u.stream<number>()\n    const scrollHeight = u.stream<number>()\n    const headerHeight = u.statefulStream(0)\n    const footerHeight = u.statefulStream(0)\n    const scrollTo = u.stream<ScrollToOptions>()\n    const scrollBy = u.stream<ScrollToOptions>()\n    const scrollingInProgress = u.statefulStream(false)\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(([scrollTop]) => scrollTop)\n      ),\n      scrollTop\n    )\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(([, scrollHeight]) => scrollHeight)\n      ),\n      scrollHeight\n    )\n\n    u.connect(scrollTop, statefulScrollTop)\n\n    return {\n      // input\n      scrollContainerState,\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n\n      // signals\n      scrollTo,\n      scrollBy,\n\n      // state\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { getValue, tup } from '@virtuoso.dev/urx'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport const propsReadySystem = u.system(\n  ([{ log }]) => {\n    const propsReady = u.statefulStream(false)\n\n    const didMount = u.streamFromEmitter(\n      u.pipe(\n        propsReady,\n        u.filter((ready) => ready),\n        u.distinctUntilChanged()\n      )\n    )\n    u.subscribe(propsReady, (value) => {\n      value && getValue(log)('props updated', {}, LogLevel.DEBUG)\n    })\n\n    return { propsReady, didMount }\n  },\n  tup(loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\n\nexport const UP = 'up' as const\nexport const DOWN = 'down' as const\nexport const NONE = 'none' as const\nexport type ScrollDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport interface ListBottomInfo {\n  bottom: number\n  offsetBottom: number\n}\n\nexport interface AtBottomParams {\n  offsetBottom: number\n  scrollTop: number\n  viewportHeight: number\n  scrollHeight: number\n}\n\nexport type NotAtBottomReason =\n  | 'SIZE_INCREASED'\n  | 'NOT_SHOWING_LAST_ITEM'\n  | 'VIEWPORT_HEIGHT_DECREASING'\n  | 'SCROLLING_UPWARDS'\n  | 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n\nexport type AtBottomReason = 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n\nexport type AtBottomState =\n  | {\n      atBottom: false\n      notAtBottomBecause: NotAtBottomReason\n      state: AtBottomParams\n    }\n  | {\n      atBottom: true\n      state: AtBottomParams\n      atBottomBecause: AtBottomReason\n      scrollTopDelta: number\n    }\n\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: 'NOT_SHOWING_LAST_ITEM',\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0,\n  },\n} as AtBottomState\n\nexport const stateFlagsSystem = u.system(([{ scrollContainerState, scrollTop, viewportHeight, headerHeight, footerHeight, scrollBy }]) => {\n  const isAtBottom = u.statefulStream(false)\n  const isAtTop = u.statefulStream(true)\n  const atBottomStateChange = u.stream<boolean>()\n  const atTopStateChange = u.stream<boolean>()\n  const atBottomThreshold = u.statefulStream(4)\n\n  // skip 1 to avoid an initial on/off flick\n  const isScrolling = u.streamFromEmitter(\n    u.pipe(\n      u.merge(u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(true)), u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(false), u.debounceTime(100))),\n      u.distinctUntilChanged()\n    )\n  )\n\n  const isScrollingBy = u.statefulStreamFromEmitter(\n    u.pipe(u.merge(u.pipe(scrollBy, u.mapTo(true)), u.pipe(scrollBy, u.mapTo(false), u.debounceTime(200))), u.distinctUntilChanged()),\n    false\n  )\n\n  // u.subscribe(isScrollingBy, (isScrollingBy) => console.log({ isScrollingBy }))\n\n  u.connect(\n    u.pipe(\n      u.duc(scrollTop),\n      u.map((top) => top === 0),\n      u.distinctUntilChanged()\n    ),\n    isAtTop\n  )\n\n  u.connect(isAtTop, atTopStateChange)\n\n  const atBottomState = u.streamFromEmitter(\n    u.pipe(\n      u.combineLatest(scrollContainerState, u.duc(viewportHeight), u.duc(headerHeight), u.duc(footerHeight), u.duc(atBottomThreshold)),\n      u.scan((current, [[scrollTop, scrollHeight], viewportHeight, _headerHeight, _footerHeight, atBottomThreshold]) => {\n        const isAtBottom = scrollTop + viewportHeight - scrollHeight > -atBottomThreshold\n        const state = {\n          viewportHeight,\n          scrollTop,\n          scrollHeight,\n        }\n\n        if (isAtBottom) {\n          let atBottomBecause: 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n          let scrollTopDelta: number\n          if (scrollTop > current.state.scrollTop) {\n            atBottomBecause = 'SCROLLED_DOWN'\n            scrollTopDelta = current.state.scrollTop - scrollTop\n          } else {\n            atBottomBecause = 'SIZE_DECREASED'\n            scrollTopDelta = current.state.scrollTop - scrollTop || (current as { scrollTopDelta: number }).scrollTopDelta\n          }\n          return {\n            atBottom: true,\n            state,\n            atBottomBecause,\n            scrollTopDelta,\n          } as AtBottomState\n        }\n\n        let notAtBottomBecause: NotAtBottomReason\n\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = 'SIZE_INCREASED'\n        } else if (viewportHeight < current.state.viewportHeight) {\n          notAtBottomBecause = 'VIEWPORT_HEIGHT_DECREASING'\n        } else if (scrollTop < current.state.scrollTop) {\n          notAtBottomBecause = 'SCROLLING_UPWARDS'\n        } else {\n          notAtBottomBecause = 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n        }\n\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state,\n        } as AtBottomState\n      }, INITIAL_BOTTOM_STATE),\n      u.distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom\n      })\n    )\n  )\n\n  const lastJumpDueToItemResize = u.statefulStreamFromEmitter(\n    u.pipe(\n      scrollContainerState,\n      u.scan(\n        (current, [scrollTop, scrollHeight]) => {\n          if (current.scrollHeight !== scrollHeight) {\n            if (current.scrollTop !== scrollTop) {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: current.scrollTop - scrollTop,\n                changed: true,\n              }\n            } else {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: 0,\n                changed: true,\n              }\n            }\n          } else {\n            return {\n              scrollTop,\n              scrollHeight,\n              jump: 0,\n              changed: false,\n            }\n          }\n        },\n        { scrollHeight: 0, jump: 0, scrollTop: 0, changed: false }\n      ),\n      u.filter((value) => value.changed),\n      u.map((value) => value.jump)\n    ),\n    0\n  )\n\n  u.connect(\n    u.pipe(\n      atBottomState,\n      u.map((state) => state.atBottom)\n    ),\n    isAtBottom\n  )\n\n  u.subscribe(isAtBottom, (value) => {\n    setTimeout(() => u.publish(atBottomStateChange, value))\n  })\n\n  const scrollDirection = u.statefulStream<ScrollDirection>(DOWN)\n\n  u.subscribe(isAtBottom, (value) => {\n    setTimeout(() => {\n      u.publish(atBottomStateChange, value)\n    })\n  })\n\n  u.connect(\n    u.pipe(\n      scrollContainerState,\n      u.map(([scrollTop]) => scrollTop),\n      u.distinctUntilChanged(),\n      u.scan(\n        (acc, scrollTop) => {\n          // if things change while compensating for items, ignore,\n          // but store the new scrollTop\n          if (u.getValue(isScrollingBy)) {\n            return { direction: acc.direction, prevScrollTop: scrollTop }\n          }\n\n          return { direction: scrollTop < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop }\n        },\n        { direction: DOWN, prevScrollTop: 0 } as { direction: ScrollDirection; prevScrollTop: number }\n      ),\n      u.map((value) => value.direction)\n    ),\n    scrollDirection\n  )\n\n  u.connect(u.pipe(scrollContainerState, u.throttleTime(50), u.mapTo(NONE)), scrollDirection)\n\n  u.connect(isAtBottom, atBottomStateChange)\n\n  const scrollVelocity = u.statefulStream(0)\n\n  u.connect(\n    u.pipe(\n      isScrolling,\n      u.filter((value) => !value),\n      u.mapTo(0)\n    ),\n    scrollVelocity\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTop,\n      u.throttleTime(100),\n      u.withLatestFrom(isScrolling),\n      u.filter(([_, isScrolling]) => !!isScrolling),\n      u.scan(([_, prev], [next]) => [prev, next], [0, 0]),\n      u.map(([prev, next]) => next - prev)\n    ),\n    scrollVelocity\n  )\n\n  return {\n    isScrolling,\n    isAtTop,\n    isAtBottom,\n    atBottomState,\n    atTopStateChange,\n    atBottomStateChange,\n    scrollDirection,\n    atBottomThreshold,\n    scrollVelocity,\n    lastJumpDueToItemResize,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { ListRange } from './interfaces'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { ScrollSeekConfiguration } from './interfaces'\n\nexport const scrollSeekSystem = u.system(\n  ([{ scrollVelocity }]) => {\n    const isSeeking = u.statefulStream(false)\n    const rangeChanged = u.stream<ListRange>()\n    const scrollSeekConfiguration = u.statefulStream<ScrollSeekConfiguration | undefined | false>(false)\n\n    u.connect(\n      u.pipe(\n        scrollVelocity,\n        u.withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        u.filter(([_, config]) => !!config),\n        u.map(([speed, config, isSeeking, range]) => {\n          const { exit, enter } = config as ScrollSeekConfiguration\n          if (isSeeking) {\n            if (exit(speed, range)) {\n              return false\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true\n            }\n          }\n          return isSeeking\n        }),\n        u.distinctUntilChanged()\n      ),\n      isSeeking\n    )\n\n    u.subscribe(\n      u.pipe(u.combineLatest(isSeeking, scrollVelocity, rangeChanged), u.withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking, velocity, range], config]) => isSeeking && config && config.change && config.change(velocity, range)\n    )\n\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged }\n  },\n  u.tup(stateFlagsSystem),\n  { singleton: true }\n)\n","interface NilNode {\n  lvl: 0\n}\n\nconst NIL_NODE: NilNode = { lvl: 0 }\n\ninterface NodeData<T> {\n  k: number\n  v: T\n}\n\ninterface NonNilAANode<T> {\n  k: number\n  v: T\n  lvl: number\n  l: NonNilAANode<T> | NilNode\n  r: NonNilAANode<T> | NilNode\n}\n\nexport interface Range<T> {\n  start: number\n  end: number\n  value: T\n}\n\nexport type AANode<T> = NilNode | NonNilAANode<T>\n\nfunction newAANode<T>(k: number, v: T, lvl: number, l: AANode<T> = NIL_NODE, r: AANode<T> = NIL_NODE): NonNilAANode<T> {\n  return { k, v, lvl, l, r }\n}\n\nexport function empty(node: AANode<any>): node is NilNode {\n  return node === NIL_NODE\n}\n\nexport function newTree<T>(): AANode<T> {\n  return NIL_NODE\n}\n\nexport function remove<T>(node: AANode<T>, key: number): AANode<T> {\n  if (empty(node)) return NIL_NODE\n\n  const { k, l, r } = node\n\n  if (key === k) {\n    if (empty(l)) {\n      return r\n    } else if (empty(r)) {\n      return l\n    } else {\n      const [lastKey, lastValue] = last(l)\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }))\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }))\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }))\n  }\n}\n\nexport function find<T>(node: AANode<T>, key: number): T | undefined {\n  if (empty(node)) {\n    return\n  }\n\n  if (key === node.k) {\n    return node.v\n  } else if (key < node.k) {\n    return find(node.l, key)\n  } else {\n    return find(node.r, key)\n  }\n}\n\nexport function findMaxKeyValue<T>(node: AANode<T>, value: number, field: 'k' | 'v' = 'k'): [number, T | undefined] {\n  if (empty(node)) {\n    return [-Infinity, undefined]\n  }\n\n  if (node[field] === value) {\n    return [node.k, node.v]\n  }\n\n  if (node[field] < value) {\n    const r = findMaxKeyValue(node.r, value, field)\n    if (r[0] === -Infinity) {\n      return [node.k, node.v]\n    } else {\n      return r\n    }\n  }\n\n  return findMaxKeyValue(node.l, value, field)\n}\n\nexport function insert<T>(node: AANode<T>, k: number, v: T): NonNilAANode<T> {\n  if (empty(node)) {\n    return newAANode(k, v, 1)\n  }\n  if (k === node.k) {\n    return clone(node, { k, v })\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }))\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }))\n  }\n}\n\nexport function walkWithin<T>(node: AANode<T>, start: number, end: number): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  const { k, v, l, r } = node\n  let result: NodeData<T>[] = []\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end))\n  }\n\n  if (k >= start && k <= end) {\n    result.push({ k, v })\n  }\n\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end))\n  }\n\n  return result\n}\n\nexport function walk<T>(node: AANode<T>): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)]\n}\n\nfunction last<T>(node: NonNilAANode<T>): [number, T] {\n  return empty(node.r) ? [node.k, node.v] : last(node.r)\n}\n\nfunction deleteLast<T>(node: NonNilAANode<T>): AANode<T> {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }))\n}\n\nfunction clone<T>(node: NonNilAANode<T>, args: Partial<NonNilAANode<T>>): NonNilAANode<T> {\n  return newAANode(\n    args.k !== undefined ? args.k : node.k,\n    args.v !== undefined ? args.v : node.v,\n    args.lvl !== undefined ? args.lvl : node.lvl,\n    args.l !== undefined ? args.l : node.l,\n    args.r !== undefined ? args.r : node.r\n  )\n}\n\nfunction isSingle(node: AANode<any>) {\n  return empty(node) || node.lvl > node.r.lvl\n}\n\nfunction rebalance<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  return split(skew(node))\n}\n\nfunction adjust<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l, r, lvl } = node\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1,\n          }),\n          lvl: lvl,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl\n\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1,\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  }\n}\n\nexport function keys(node: AANode<any>): number[] {\n  if (empty(node)) {\n    return []\n  }\n  return [...keys(node.l), node.k, ...keys(node.r)]\n}\n\nexport function ranges<T>(node: AANode<T>): Range<T>[] {\n  return toRanges(walk(node))\n}\n\nexport function rangesWithin<T>(node: AANode<T>, startIndex: number, endIndex: number): Range<T>[] {\n  if (empty(node)) {\n    return []\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0]\n  return toRanges(walkWithin(node, adjustedStart, endIndex))\n}\n\nexport function arrayToRanges<T, V>(\n  items: T[],\n  parser: (item: T) => { index: number; value: V }\n): Array<{ start: number; end: number; value: V }> {\n  const length = items.length\n  if (length === 0) {\n    return []\n  }\n\n  let { index: start, value } = parser(items[0])\n\n  const result = []\n\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i])\n    result.push({ start, end: nextIndex - 1, value })\n\n    start = nextIndex\n    value = nextValue\n  }\n\n  result.push({ start, end: Infinity, value })\n  return result\n}\n\nfunction toRanges<T>(nodes: NodeData<T>[]): Range<T>[] {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }))\n}\n\nfunction split<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { r, lvl } = node\n\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node\n}\n\nfunction skew<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l } = node\n\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node\n}\n","export type Comparator<T> = {\n  (item: T, value: number): -1 | 0 | 1\n}\n\nexport function findIndexOfClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>, start = 0): number {\n  let end = items.length - 1\n\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2)\n    const item = items[index]\n    const match = comparator(item, value)\n    if (match === 0) {\n      return index\n    }\n\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1\n      }\n      end = index - 1\n    } else {\n      if (end === start) {\n        return index\n      }\n      start = index + 1\n    }\n  }\n\n  throw new Error(`Failed binary finding record in array - ${items.join(',')}, searched for ${value}`)\n}\n\nexport function findClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>): T {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)]\n}\n\nexport function findRange<T>(items: T[], startValue: number, endValue: number, comparator: Comparator<T>): T[] {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator)\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex)\n  return items.slice(startIndex, endIndex + 1)\n}\n","export function correctItemSize(el: HTMLElement, dimension: 'height' | 'width') {\n  return Math.round(el.getBoundingClientRect()[dimension])\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { arrayToRanges, AANode, empty, findMaxKeyValue, insert, newTree, Range, rangesWithin, remove, walk } from './AATree'\nimport * as arrayBinarySearch from './utils/binaryArraySearch'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { loggerSystem, Log, LogLevel } from './loggerSystem'\n\nexport interface SizeRange {\n  startIndex: number\n  endIndex: number\n  size: number\n}\n\nexport type Data = readonly unknown[] | undefined\n\nfunction rangeIncludes(refRange: SizeRange) {\n  const { size, startIndex, endIndex } = refRange\n  return (range: Range<number>) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size\n  }\n}\n\nexport function insertRanges(sizeTree: AANode<number>, ranges: SizeRange[]) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity\n\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range\n    syncStart = Math.min(syncStart, startIndex)\n\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size)\n      continue\n    }\n\n    // extend the range in both directions, so that we can get adjacent neighbours.\n    // if the previous / next ones have the same value as the one we are about to insert,\n    // we 'merge' them.\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1)\n\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue\n    }\n\n    let firstPassDone = false\n    let shouldInsert = false\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      // previous range\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size\n        firstPassDone = true\n      } else {\n        // remove the range if it starts within the new range OR if\n        // it has the same value as it, in order to perform a merge\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart)\n        }\n      }\n\n      // next range\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue)\n        }\n      }\n    }\n\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size)\n    }\n  }\n  return [sizeTree, syncStart] as const\n}\n\nexport interface OffsetPoint {\n  offset: number\n  size: number\n  index: number\n}\n\nexport interface SizeState {\n  sizeTree: AANode<number>\n  offsetTree: Array<OffsetPoint>\n  groupOffsetTree: AANode<number>\n  lastIndex: number\n  lastOffset: number\n  lastSize: number\n  groupIndices: number[]\n}\n\nexport function initialSizeState(): SizeState {\n  return {\n    offsetTree: [],\n    sizeTree: newTree<number>(),\n    groupOffsetTree: newTree<number>(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: [],\n  }\n}\n\nexport function indexComparator({ index: itemIndex }: OffsetPoint, index: number) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1\n}\n\nexport function offsetComparator({ offset: itemOffset }: OffsetPoint, offset: number) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1\n}\n\nfunction offsetPointParser(point: OffsetPoint) {\n  return { index: point.index, value: point }\n}\n\nexport function rangesWithinOffsets(\n  tree: Array<OffsetPoint>,\n  startOffset: number,\n  endOffset: number,\n  minStartIndex = 0\n): Array<{\n  start: number\n  end: number\n  value: {\n    size: number\n    offset: number\n    index: number\n  }\n}> {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, arrayBinarySearch.findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset)\n  }\n\n  return arrayToRanges(arrayBinarySearch.findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser)\n}\n\nexport function sizeStateReducer(state: SizeState, [ranges, groupIndices, log]: [SizeRange[], number[], Log]) {\n  if (ranges.length > 0) {\n    log('received item sizes', ranges, LogLevel.DEBUG)\n  }\n  const sizeTree = state.sizeTree\n  let offsetTree = state.offsetTree\n  let newSizeTree: AANode<number> = sizeTree\n  let syncStart = 0\n\n  // We receive probe item results from a group probe,\n  // which should always pass an item and a group\n  // the results contain two ranges, which we consider to mean that groups and items have different size\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size\n    const itemSize = ranges[1].size\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize)\n    }, newSizeTree)\n  } else {\n    ;[newSizeTree, syncStart] = insertRanges(newSizeTree, ranges)\n  }\n\n  if (newSizeTree === sizeTree) {\n    return state\n  }\n\n  let prevIndex = 0\n  let prevSize = 0\n\n  let prevAOffset = 0\n  let startAIndex = 0\n\n  if (syncStart !== 0) {\n    startAIndex = arrayBinarySearch.findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator)\n    const offsetInfo = offsetTree[startAIndex]\n    prevAOffset = offsetInfo.offset\n    const kv = findMaxKeyValue(newSizeTree, syncStart - 1)\n    prevIndex = kv[0]\n    prevSize = kv[1]!\n\n    if (offsetTree.length && offsetTree[startAIndex].size === findMaxKeyValue(newSizeTree, syncStart)[1]) {\n      startAIndex -= 1\n    }\n\n    offsetTree = offsetTree.slice(0, startAIndex + 1)\n  } else {\n    offsetTree = []\n  }\n\n  for (const { start: startIndex, value } of rangesWithin(newSizeTree, syncStart, Infinity)) {\n    const aOffset = (startIndex - prevIndex) * prevSize + prevAOffset\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex,\n    })\n    prevIndex = startIndex\n    prevAOffset = aOffset\n    prevSize = value\n  }\n\n  return {\n    sizeTree: newSizeTree,\n    offsetTree,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, offsetTree))\n    }, newTree<number>()),\n    lastIndex: prevIndex,\n    lastOffset: prevAOffset,\n    lastSize: prevSize,\n    groupIndices,\n  }\n}\n\nexport function offsetOf(index: number, tree: Array<OffsetPoint>) {\n  if (tree.length === 0) {\n    return 0\n  }\n\n  const { offset, index: startIndex, size } = arrayBinarySearch.findClosestSmallerOrEqual(tree, index, indexComparator)\n  return size * (index - startIndex) + offset\n}\n\nexport function originalIndexFromItemIndex(itemIndex: number, sizes: SizeState) {\n  if (!hasGroups(sizes)) {\n    return itemIndex\n  }\n\n  let groupOffset = 0\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++\n  }\n  // we find the real item index, offsetting it by the number of group items before it\n  return itemIndex + groupOffset\n}\n\nexport function hasGroups(sizes: SizeState) {\n  return !empty(sizes.groupOffsetTree)\n}\n\ntype OptionalNumber = number | undefined\n\nconst SIZE_MAP = {\n  offsetHeight: 'height',\n  offsetWidth: 'width',\n} as const\n\n/** Calculates the height of `el`, which will be the `Item` element in the DOM. */\nexport type SizeFunction = (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\nexport const sizeSystem = u.system(\n  ([{ log }]) => {\n    const sizeRanges = u.stream<SizeRange[]>()\n    const totalCount = u.stream<number>()\n    const statefulTotalCount = u.statefulStreamFromEmitter(totalCount, 0)\n    const unshiftWith = u.stream<number>()\n    const firstItemIndex = u.statefulStream(0)\n    const groupIndices = u.statefulStream([] as number[])\n    const fixedItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const defaultItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const itemSize = u.statefulStream<SizeFunction>((el, field) => correctItemSize(el, SIZE_MAP[field]))\n    const data = u.statefulStream<Data>(undefined)\n    const initial = initialSizeState()\n\n    const sizes = u.statefulStreamFromEmitter(\n      u.pipe(sizeRanges, u.withLatestFrom(groupIndices, log), u.scan(sizeStateReducer, initial), u.distinctUntilChanged()),\n      initial\n    )\n\n    u.connect(\n      u.pipe(\n        groupIndices,\n        u.filter((indexes) => indexes.length > 0),\n        u.withLatestFrom(sizes),\n        u.map(([groupIndices, sizes]) => {\n          const groupOffsetTree = groupIndices.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes.offsetTree) || idx)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            groupIndices,\n            groupOffsetTree,\n          }\n        })\n      ),\n      sizes\n    )\n\n    // decreasing the total count should remove any existing entries\n    // beyond the last index - do this by publishing the default size as a range over them.\n    u.connect(\n      u.pipe(\n        totalCount,\n        u.withLatestFrom(sizes),\n        u.filter(([totalCount, { lastIndex }]) => {\n          return totalCount < lastIndex\n        }),\n        u.map(([totalCount, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount,\n              endIndex: lastIndex,\n              size: lastSize,\n            },\n          ] as SizeRange[]\n        })\n      ),\n      sizeRanges\n    )\n\n    u.connect(fixedItemSize, defaultItemSize)\n\n    const trackItemSizes = u.statefulStreamFromEmitter(\n      u.pipe(\n        fixedItemSize,\n        u.map((size) => size === undefined)\n      ),\n      true\n    )\n\n    u.connect(\n      u.pipe(\n        defaultItemSize,\n        u.filter((value) => {\n          return value !== undefined && empty(u.getValue(sizes).sizeTree)\n        }),\n        u.map((size) => [{ startIndex: 0, endIndex: 0, size }] as SizeRange[])\n      ),\n      sizeRanges\n    )\n\n    const listRefresh = u.streamFromEmitter(\n      u.pipe(\n        sizeRanges,\n        u.withLatestFrom(sizes),\n        u.scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes,\n            }\n          },\n          { changed: false, sizes: initial }\n        ),\n        u.map((value) => value.changed)\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        firstItemIndex,\n        u.scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next }\n          },\n          { diff: 0, prev: 0 }\n        ),\n        u.map((val) => val.diff),\n        u.filter((value) => value > 0)\n      ),\n      unshiftWith\n    )\n\n    u.subscribe(u.pipe(firstItemIndex, u.withLatestFrom(log)), ([index, log]) => {\n      if (index < 0) {\n        log(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        )\n      }\n    })\n\n    // Capture the current list top item before the sizes get refreshed\n    const beforeUnshiftWith = u.streamFromEmitter(unshiftWith)\n\n    u.connect(\n      u.pipe(\n        unshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([unshiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: prepending items does not work with groups')\n          }\n\n          return walk(sizes.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith,\n                prevSize: size,\n              }\n            },\n            {\n              ranges: [] as SizeRange[],\n              prevIndex: 0,\n              prevSize: sizes.lastSize,\n            }\n          ).ranges\n        })\n      ),\n      sizeRanges\n    )\n\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      beforeUnshiftWith,\n      firstItemIndex,\n\n      // output\n      sizes,\n      listRefresh,\n      statefulTotalCount,\n      trackItemSizes,\n      itemSize,\n    }\n  },\n  u.tup(loggerSystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromItemIndex, sizeSystem } from './sizeSystem'\nimport { IndexLocationWithAlign } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport type IndexLocation = number | IndexLocationWithAlign\n\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== 'undefined' && 'scrollBehavior' in document.documentElement.style\n\nexport function normalizeIndexLocation(location: IndexLocation) {\n  const result: IndexLocationWithAlign = typeof location === 'number' ? { index: location } : location\n\n  if (!result.align) {\n    result.align = 'start'\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = 'auto'\n  }\n  if (!result.offset) {\n    result.offset = 0\n  }\n  return result as Required<IndexLocationWithAlign>\n}\n\nexport const scrollToIndexSystem = u.system(\n  ([\n    { sizes, totalCount, listRefresh },\n    { scrollingInProgress, viewportHeight, scrollTo, smoothScrollTargetReached, headerHeight, footerHeight },\n    { log },\n  ]) => {\n    const scrollToIndex = u.stream<IndexLocation>()\n    const topListHeight = u.statefulStream(0)\n\n    let unsubscribeNextListRefresh: any = null\n    let cleartTimeoutRef: any = null\n    let unsubscribeListRefresh: any = null\n\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh()\n        unsubscribeNextListRefresh = null\n      }\n\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh()\n        unsubscribeListRefresh = null\n      }\n\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef)\n        cleartTimeoutRef = null\n      }\n      u.publish(scrollingInProgress, false)\n    }\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        u.map(([location, sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          const lastIndex = totalCount - 1\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = lastIndex\n          }\n\n          index = originalIndexFromItemIndex(index, sizes)\n\n          index = Math.max(0, index, Math.min(lastIndex, index))\n\n          let top = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (align === 'end') {\n            top = top - viewportHeight + findMaxKeyValue(sizes.sizeTree, index)[1]!\n            if (index === lastIndex) {\n              top += footerHeight\n            }\n          } else if (align === 'center') {\n            top = top - viewportHeight / 2 + findMaxKeyValue(sizes.sizeTree, index)[1]! / 2\n          } else {\n            top -= topListHeight\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          const retry = (listChanged: boolean) => {\n            cleanup()\n            if (listChanged) {\n              log('retrying to scroll to', { location }, LogLevel.DEBUG)\n              u.publish(scrollToIndex, location)\n            } else {\n              log('list did not change, scroll successful', {}, LogLevel.DEBUG)\n            }\n          }\n\n          cleanup()\n\n          if (behavior === 'smooth') {\n            let listChanged = false\n            unsubscribeListRefresh = u.subscribe(listRefresh, (changed) => {\n              listChanged = listChanged || changed\n            })\n\n            unsubscribeNextListRefresh = u.handleNext(smoothScrollTargetReached, () => {\n              retry(listChanged)\n            })\n          } else {\n            unsubscribeNextListRefresh = u.handleNext(u.pipe(listRefresh, watchChangesFor(50)), retry)\n          }\n\n          // if the scroll jump is too small, the list won't get rerendered.\n          // clean this listener\n          cleartTimeoutRef = setTimeout(() => {\n            cleanup()\n          }, 1200)\n\n          u.publish(scrollingInProgress, true)\n          log('scrolling from index to', { index, top, behavior }, LogLevel.DEBUG)\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    return {\n      scrollToIndex,\n      topListHeight,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n)\n\nfunction watchChangesFor(limit: number): u.Operator<boolean> {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false)\n    }, limit)\n    return (value) => {\n      if (value) {\n        done(true)\n        clearTimeout(timeoutRef)\n      }\n    }\n  }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { UP, DOWN, ScrollDirection } from './stateFlagsSystem'\nimport { tupleComparator } from './comparators'\n\nexport type NumberTuple = [number, number]\nexport type Overscan = number | { main: number; reverse: number }\nexport const TOP = 'top' as const\nexport const BOTTOM = 'bottom' as const\nexport const NONE = 'none' as const\nexport type ListEnd = typeof TOP | typeof BOTTOM\nexport type ViewportIncrease = number | { [k in ListEnd]?: number }\nexport type ChangeDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport function getOverscan(overscan: Overscan, end: ListEnd, direction: ScrollDirection) {\n  if (typeof overscan === 'number') {\n    return (direction === UP && end === TOP) || (direction === DOWN && end === BOTTOM) ? overscan : 0\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse\n    }\n  }\n}\n\nfunction getViewportIncrease(value: ViewportIncrease, end: ListEnd) {\n  return typeof value === 'number' ? value : value[end] || 0\n}\n\nexport const sizeRangeSystem = u.system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight }]) => {\n    const listBoundary = u.stream<NumberTuple>()\n    const topListHeight = u.statefulStream(0)\n    const fixedHeaderHeight = u.statefulStream(0)\n    const increaseViewportBy = u.statefulStream<ViewportIncrease>(0)\n    const overscan = u.statefulStream<Overscan>(0)\n\n    const visibleRange = (u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          u.duc(scrollTop),\n          u.duc(viewportHeight),\n          u.duc(headerHeight),\n          u.duc(listBoundary, tupleComparator),\n          u.duc(overscan),\n          u.duc(topListHeight),\n          u.duc(fixedHeaderHeight),\n          u.duc(deviation),\n          u.duc(increaseViewportBy)\n        ),\n        u.map(\n          ([\n            scrollTop,\n            viewportHeight,\n            headerHeight,\n            [listTop, listBottom],\n            overscan,\n            topListHeight,\n            fixedHeaderHeight,\n            deviation,\n            increaseViewportBy,\n          ]) => {\n            const top = scrollTop - deviation\n            const stickyHeaderHeight = topListHeight + fixedHeaderHeight\n            const headerVisible = Math.max(headerHeight - top, 0)\n            let direction: ChangeDirection = NONE\n            const topViewportAddition = getViewportIncrease(increaseViewportBy, TOP)\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy, BOTTOM)\n\n            listTop -= deviation\n            listTop += headerHeight\n            listBottom += headerHeight\n            listBottom -= deviation\n\n            if (listTop > scrollTop + stickyHeaderHeight - topViewportAddition) {\n              direction = UP\n            }\n\n            if (listBottom < scrollTop - headerVisible + viewportHeight + bottomViewportAddition) {\n              direction = DOWN\n            }\n\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight - getOverscan(overscan, TOP, direction) - topViewportAddition, 0),\n                top -\n                  headerVisible -\n                  fixedHeaderHeight +\n                  viewportHeight +\n                  getOverscan(overscan, BOTTOM, direction) +\n                  bottomViewportAddition,\n              ] as NumberTuple\n            }\n\n            return null\n          }\n        ),\n        u.filter((value) => value != null),\n        u.distinctUntilChanged(tupleComparator as any)\n      ),\n      [0, 0]\n    ) as unknown) as u.StatefulStream<NumberTuple>\n\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n      fixedHeaderHeight,\n      increaseViewportBy,\n\n      // output\n      visibleRange,\n    }\n  },\n  u.tup(domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { WindowViewportInfo } from './interfaces'\n\nexport const windowScrollerSystem = u.system(([{ scrollTo, scrollContainerState }]) => {\n  const windowScrollContainerState = u.stream<[number, number]>()\n  const windowViewportRect = u.stream<WindowViewportInfo>()\n  const windowScrollTo = u.stream<ScrollToOptions>()\n  const useWindowScroll = u.statefulStream(false)\n  const customScrollParent = u.statefulStream<HTMLElement | undefined>(undefined)\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(windowScrollContainerState, windowViewportRect),\n      u.map(([[windowScrollTop, scrollHeight], { offsetTop }]) => {\n        return [Math.max(0, windowScrollTop - offsetTop), scrollHeight]\n      })\n    ),\n    scrollContainerState\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTo,\n      u.withLatestFrom(windowViewportRect),\n      u.map(([scrollTo, { offsetTop }]) => {\n        return {\n          ...scrollTo,\n          top: scrollTo.top! + offsetTop,\n        }\n      })\n    ),\n    windowScrollTo\n  )\n\n  return {\n    // config\n    useWindowScroll,\n    customScrollParent,\n\n    // input\n    windowScrollContainerState,\n    windowViewportRect,\n\n    // signals\n    windowScrollTo,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { rangeComparator, tupleComparator } from './comparators'\nimport { domIOSystem } from './domIOSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { IndexLocation, normalizeIndexLocation } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\n\nexport interface ElementDimensions {\n  width: number\n  height: number\n}\n\nexport interface GridItem {\n  index: number\n}\n\nexport interface GridLayout {\n  top: number\n  bottom: number\n}\n\nexport interface GridState extends GridLayout {\n  items: GridItem[]\n  offsetTop: number\n  offsetBottom: number\n  itemHeight: number\n  itemWidth: number\n}\n\nconst INITIAL_GRID_STATE: GridState = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst PROBE_GRID_STATE: GridState = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst { ceil, floor, min, max } = Math\n\nfunction hackFloor(val: number) {\n  return ceil(val) - val < 0.03 ? ceil(val) : floor(val)\n}\n\nfunction buildItems(startIndex: number, endIndex: number) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map((_, i) => ({ index: i + startIndex } as GridItem))\n}\nexport const gridSystem = u.system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached, scrollContainerState },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, windowScrollTo, useWindowScroll, customScrollParent, windowScrollContainerState },\n  ]) => {\n    const totalCount = u.statefulStream(0)\n    const initialItemCount = u.statefulStream(0)\n    const gridState = u.statefulStream(INITIAL_GRID_STATE)\n    const viewportDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const itemDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const scrollToIndex = u.stream<IndexLocation>()\n    const scrollHeight = u.stream<number>()\n    const deviation = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.map(([, count]) => {\n          return {\n            items: buildItems(0, count - 1),\n            top: 0,\n            bottom: 0,\n            offsetBottom: 0,\n            offsetTop: 0,\n            itemHeight: 0,\n            itemWidth: 0,\n          }\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(\n          u.duc(totalCount),\n          visibleRange,\n          u.duc(itemDimensions, (prev, next) => prev && prev.width === next.width && prev.height === next.height)\n        ),\n        u.withLatestFrom(viewportDimensions),\n        u.map(([[totalCount, [startOffset, endOffset], item], viewport]) => {\n          const { height: itemHeight, width: itemWidth } = item\n          const { width: viewportWidth } = viewport\n\n          if (totalCount === 0 || viewportWidth === 0) {\n            return INITIAL_GRID_STATE\n          }\n\n          if (itemWidth === 0) {\n            return PROBE_GRID_STATE\n          }\n\n          const perRow = hackFloor(viewportWidth / itemWidth)\n          let startIndex = perRow * floor(startOffset / itemHeight)\n          let endIndex = perRow * ceil(endOffset / itemHeight) - 1\n          endIndex = min(totalCount - 1, endIndex)\n          startIndex = min(endIndex, max(0, startIndex))\n\n          const items = buildItems(startIndex, endIndex)\n          const { top, bottom } = gridLayout(viewport, item, items)\n          const totalHeight = ceil(totalCount / perRow) * itemHeight\n          const offsetBottom = totalHeight - bottom\n\n          return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth } as GridState\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        viewportDimensions,\n        u.map(({ height }) => height)\n      ),\n      viewportHeight\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(viewportDimensions, itemDimensions, gridState),\n        u.map(([viewportDimensions, item, { items }]) => {\n          const { top, bottom } = gridLayout(viewportDimensions, item, items)\n\n          return [top, bottom] as [number, number]\n        }),\n        u.distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].index === totalCount - 1),\n        u.map(([, totalCount]) => totalCount - 1),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0\n        }),\n        u.mapTo(0),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          }\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    u.connect(rangeChanged, scrollSeek.scrollSeekRangeChanged)\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(viewportDimensions, itemDimensions, totalCount),\n        u.map(([location, viewport, item, totalCount]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = totalCount - 1\n          }\n\n          index = Math.max(0, index, Math.min(totalCount - 1, index))\n\n          let top = itemTop(viewport, item, index)\n\n          if (align === 'end') {\n            top = Math.round(top - viewport.height + item.height)\n          } else if (align === 'center') {\n            top = Math.round(top - viewport.height / 2 + item.height / 2)\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        gridState,\n        u.map((gridState) => {\n          return gridState.offsetBottom + gridState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(\n      u.pipe(\n        windowViewportRect,\n        u.map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    )\n\n    return {\n      // input\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      customScrollParent,\n      windowScrollContainerState,\n      deviation,\n      scrollContainerState,\n      initialItemCount,\n      ...scrollSeek,\n\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      propsReady,\n    }\n  },\n  u.tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem)\n)\n\nfunction gridLayout(viewport: ElementDimensions, item: ElementDimensions, items: GridItem[]): GridLayout {\n  const { height: itemHeight } = item\n  if (itemHeight === undefined || items.length === 0) {\n    return { top: 0, bottom: 0 }\n  }\n\n  const top = itemTop(viewport, item, items[0].index)\n  const bottom = itemTop(viewport, item, items[items.length - 1].index) + itemHeight\n  return { top, bottom }\n}\n\nfunction itemTop(viewport: ElementDimensions, item: ElementDimensions, index: number) {\n  const perRow = itemsPerRow(viewport.width, item.width)\n  return floor(index / perRow) * item.height\n}\n\nfunction itemsPerRow(viewportWidth: number, itemWidth: number) {\n  return hackFloor(viewportWidth / itemWidth)\n}\n","import { useRef } from 'react'\n\nexport type CallbackRefParam = HTMLElement | null\n\nexport function useSizeWithElRef(callback: (e: HTMLElement) => void, enabled = true) {\n  const ref = useRef<CallbackRefParam>(null)\n\n  let callbackRef = (_el: CallbackRefParam) => {\n    void 0\n  }\n\n  if (typeof ResizeObserver !== 'undefined') {\n    const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      const element = entries[0].target as HTMLElement\n      if (element.offsetParent !== null) {\n        callback(element)\n      }\n    })\n\n    callbackRef = (elRef: CallbackRefParam) => {\n      if (elRef && enabled) {\n        observer.observe(elRef)\n        ref.current = elRef\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current)\n        }\n        ref.current = null\n      }\n    }\n  }\n\n  return { ref, callbackRef }\n}\n\nexport default function useSize(callback: (e: HTMLElement) => void, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef\n}\n","import { useEffect, useRef, useCallback } from 'react'\nimport { useSizeWithElRef } from './useSize'\nimport { WindowViewportInfo } from '../interfaces'\n\nexport default function useWindowViewportRectRef(callback: (info: WindowViewportInfo) => void, customScrollParent?: HTMLElement) {\n  const viewportInfo = useRef<WindowViewportInfo | null>(null)\n\n  const calculateInfo = useCallback(\n    (element: HTMLElement | null) => {\n      if (element === null) {\n        return\n      }\n      const rect = element.getBoundingClientRect()\n      const visibleWidth = rect.width\n      let visibleHeight: number, offsetTop: number\n\n      if (customScrollParent) {\n        const customScrollParentRect = customScrollParent.getBoundingClientRect()\n        const deltaTop = rect.top - customScrollParentRect.top\n\n        visibleHeight = customScrollParentRect.height - Math.max(0, deltaTop)\n        offsetTop = deltaTop + customScrollParent.scrollTop\n      } else {\n        visibleHeight = window.innerHeight - Math.max(0, rect.top)\n        offsetTop = rect.top + window.pageYOffset\n      }\n\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth,\n      }\n\n      callback(viewportInfo.current)\n    },\n    [callback, customScrollParent]\n  )\n\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo)\n\n  const scrollAndResizeEventHandler = useCallback(() => {\n    calculateInfo(ref.current)\n  }, [calculateInfo, ref])\n\n  useEffect(() => {\n    if (customScrollParent) {\n      customScrollParent.addEventListener('scroll', scrollAndResizeEventHandler)\n      const observer = new ResizeObserver(scrollAndResizeEventHandler)\n      observer.observe(customScrollParent)\n      return () => {\n        customScrollParent.removeEventListener('scroll', scrollAndResizeEventHandler)\n        observer.unobserve(customScrollParent)\n      }\n    } else {\n      window.addEventListener('scroll', scrollAndResizeEventHandler)\n      window.addEventListener('resize', scrollAndResizeEventHandler)\n      return () => {\n        window.removeEventListener('scroll', scrollAndResizeEventHandler)\n        window.removeEventListener('resize', scrollAndResizeEventHandler)\n      }\n    }\n  }, [scrollAndResizeEventHandler, customScrollParent])\n\n  return callbackRef\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import { Log, LogLevel } from '../loggerSystem'\nimport { SizeFunction, SizeRange } from '../sizeSystem'\nimport useSize from './useSize'\n\nexport default function useChangedListContentsSizes(\n  callback: (ranges: SizeRange[]) => void,\n  itemSize: SizeFunction,\n  enabled: boolean,\n  scrollContainerStateCallback: (state: [number, number]) => void,\n  log: Log,\n  customScrollParent?: HTMLElement\n) {\n  return useSize((el: HTMLElement) => {\n    const ranges = getChangedChildSizes(el.children, itemSize, 'offsetHeight', log)\n    let scrollableElement = el.parentElement!\n\n    while (!scrollableElement.dataset['virtuosoScroller']) {\n      scrollableElement = scrollableElement.parentElement!\n    }\n\n    const scrollTop = customScrollParent\n      ? customScrollParent.scrollTop\n      : // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      (scrollableElement.firstElementChild! as HTMLDivElement).dataset['viewportType']! === 'window'\n      ? window.pageYOffset || document.documentElement.scrollTop\n      : scrollableElement.scrollTop\n\n    customScrollParent\n      ? scrollContainerStateCallback([Math.max(scrollTop, 0), customScrollParent.scrollHeight])\n      : scrollContainerStateCallback([Math.max(scrollTop, 0), scrollableElement.scrollHeight])\n    if (ranges !== null) {\n      callback(ranges)\n    }\n  }, enabled)\n}\n\nfunction getChangedChildSizes(children: HTMLCollection, itemSize: SizeFunction, field: 'offsetHeight' | 'offsetWidth', log: Log) {\n  const length = children.length\n\n  if (length === 0) {\n    return null\n  }\n\n  const results: SizeRange[] = []\n\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i) as HTMLElement\n\n    if (!child || child.dataset.index === undefined) {\n      continue\n    }\n\n    const index = parseInt(child.dataset.index!)\n    const knownSize = parseFloat(child.dataset.knownSize!)\n    const size = itemSize(child, field)\n\n    if (size === 0) {\n      log('Zero-sized element, this should not happen', { child }, LogLevel.ERROR)\n    }\n\n    if (size === knownSize) {\n      continue\n    }\n\n    const lastResult = results[results.length - 1]\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size })\n    } else {\n      results[results.length - 1].endIndex++\n    }\n  }\n\n  return results\n}\n","import { useRef, useCallback, useEffect } from 'react'\nimport * as u from '@virtuoso.dev/urx'\nimport { correctItemSize } from '../utils/correctItemSize'\n\nexport type ScrollerRef = Window | HTMLElement | null\n\nfunction approximatelyEqual(num1: number, num2: number) {\n  return Math.abs(num1 - num2) < 1.01\n}\n\nexport default function useScrollTop(\n  scrollContainerStateCallback: (state: [number, number]) => void,\n  smoothScrollTargetReached: (yes: true) => void,\n  scrollerElement: any,\n  scrollerRefCallback: (ref: ScrollerRef) => void = u.noop,\n  customScrollParent?: HTMLElement\n) {\n  const scrollerRef = useRef<HTMLElement | null | Window>(null)\n  const scrollTopTarget = useRef<any>(null)\n  const timeoutRef = useRef<any>(null)\n\n  const handler = useCallback(\n    (ev: Event) => {\n      const el = ev.target as HTMLElement\n      const scrollTop =\n        (el as any) === window || (el as any) === document ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop\n      const scrollHeight = (el as any) === window ? document.documentElement.scrollHeight : el.scrollHeight\n\n      scrollContainerStateCallback([Math.max(scrollTop, 0), scrollHeight])\n\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === el.scrollHeight - correctItemSize(el, 'height')) {\n          scrollTopTarget.current = null\n          smoothScrollTargetReached(true)\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current)\n            timeoutRef.current = null\n          }\n        }\n      }\n    },\n    [scrollContainerStateCallback, smoothScrollTargetReached]\n  )\n\n  useEffect(() => {\n    const localRef = customScrollParent ? customScrollParent : scrollerRef.current!\n\n    scrollerRefCallback(customScrollParent ? customScrollParent : scrollerRef.current)\n    handler(({ target: localRef } as unknown) as Event)\n    localRef.addEventListener('scroll', handler, { passive: true })\n\n    return () => {\n      scrollerRefCallback(null)\n      localRef.removeEventListener('scroll', handler)\n    }\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback, customScrollParent])\n\n  function scrollToCallback(location: ScrollToOptions) {\n    const scrollerElement = scrollerRef.current\n    if (!scrollerElement || ('offsetHeight' in scrollerElement && scrollerElement.offsetHeight === 0)) {\n      return\n    }\n\n    const isSmooth = location.behavior === 'smooth'\n\n    let offsetHeight: number\n    let scrollHeight: number\n    let scrollTop: number\n\n    if (scrollerElement === window) {\n      // this is not a mistake\n      scrollHeight = Math.max(correctItemSize(document.documentElement, 'height'), document.documentElement.scrollHeight)\n      offsetHeight = window.innerHeight\n      scrollTop = document.documentElement.scrollTop\n    } else {\n      scrollHeight = (scrollerElement as HTMLElement).scrollHeight\n      offsetHeight = correctItemSize(scrollerElement as HTMLElement, 'height')\n      scrollTop = (scrollerElement as HTMLElement).scrollTop\n    }\n\n    const maxScrollTop = scrollHeight - offsetHeight\n    location.top = Math.ceil(Math.max(Math.min(maxScrollTop, location.top!), 0))\n\n    // avoid system hanging because the DOM never called back\n    // with the scrollTop\n    // scroller is already at this location\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollContainerStateCallback([scrollTop, scrollHeight])\n      if (isSmooth) {\n        smoothScrollTargetReached(true)\n      }\n      return\n    }\n\n    if (isSmooth) {\n      scrollTopTarget.current = location.top\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        scrollTopTarget.current = null\n        smoothScrollTargetReached(true)\n      }, 1000)\n    } else {\n      scrollTopTarget.current = null\n    }\n\n    scrollerElement.scrollTo(location)\n  }\n\n  function scrollByCallback(location: ScrollToOptions) {\n    if (scrollTopTarget.current === null) {\n      scrollerRef.current!.scrollBy(location)\n    }\n  }\n\n  return { scrollerRef, scrollByCallback, scrollToCallback }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { empty } from './AATree'\nimport { sizeSystem } from './sizeSystem'\nimport { domIOSystem } from './domIOSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialTopMostItemIndexSystem = u.system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = u.statefulStream(true)\n    const initialTopMostItemIndex = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialTopMostItemIndex),\n        u.filter(([_, index]) => index !== 0),\n        u.mapTo(false)\n      ),\n      scrolledToInitialItem\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(listRefresh, didMount),\n        u.withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize),\n        u.filter(([[, didMount], scrolledToInitialItem, { sizeTree }, defaultItemSize]) => {\n          return didMount && (!empty(sizeTree) || defaultItemSize !== undefined) && !scrolledToInitialItem\n        }),\n        u.withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex]) => {\n        setTimeout(() => {\n          u.handleNext(scrollTop, () => {\n            u.publish(scrolledToInitialItem, true)\n          })\n          u.publish(scrollToIndex, initialTopMostItemIndex)\n        })\n      }\n    )\n\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { FollowOutput, FollowOutputScalarType } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { loggerSystem, LogLevel } from './loggerSystem'\nimport { domIOSystem } from './domIOSystem'\n\nfunction normalizeFollowOutput(follow: FollowOutputScalarType): FollowOutputScalarType {\n  if (!follow) {\n    return false\n  }\n  return follow === 'smooth' ? 'smooth' : 'auto'\n}\n\nconst behaviorFromFollowOutput = (follow: FollowOutput, isAtBottom: boolean) => {\n  if (typeof follow === 'function') {\n    return normalizeFollowOutput(follow(isAtBottom))\n  }\n  return isAtBottom && normalizeFollowOutput(follow)\n}\n\nexport const followOutputSystem = u.system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress },\n  ]) => {\n    const followOutput = u.statefulStream<FollowOutput>(false)\n    let pendingScrollHandle: any = null\n\n    function scrollToBottom(followOutputBehavior: FollowOutputScalarType) {\n      u.publish(scrollToIndex, {\n        index: 'LAST',\n        align: 'end',\n        behavior: followOutputBehavior,\n      })\n    }\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.pipe(u.duc(totalCount), u.skip(1)), didMount),\n        u.withLatestFrom(u.duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        u.map(([[totalCount, didMount], followOutput, isAtBottom, scrolledToInitialItem, scrollingInProgress]) => {\n          let shouldFollow = didMount && scrolledToInitialItem\n          let followOutputBehavior: FollowOutputScalarType = 'auto'\n\n          if (shouldFollow) {\n            // if scrolling to index is in progress,\n            // assume that a previous followOutput response is going\n            followOutputBehavior = behaviorFromFollowOutput(followOutput, isAtBottom || scrollingInProgress)\n            shouldFollow = shouldFollow && !!followOutputBehavior\n          }\n\n          return { totalCount, shouldFollow, followOutputBehavior }\n        }),\n        u.filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle()\n          pendingScrollHandle = null\n        }\n\n        pendingScrollHandle = u.handleNext(listRefresh, () => {\n          u.getValue(log)('following output to ', { totalCount }, LogLevel.DEBUG)\n          scrollToBottom(followOutputBehavior)\n          pendingScrollHandle = null\n        })\n      }\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.duc(followOutput), totalCount, propsReady),\n        u.filter(([follow, , ready]) => follow && ready),\n        u.scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next }\n          },\n          { refreshed: false, value: 0 }\n        ),\n        u.filter(({ refreshed }) => refreshed),\n        u.withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput]) => {\n        const cancel = u.handleNext(atBottomState, (state) => {\n          if (followOutput && !state.atBottom && state.notAtBottomBecause === 'SIZE_INCREASED' && !pendingScrollHandle) {\n            u.getValue(log)('scrolling to bottom due to increased size', {}, LogLevel.DEBUG)\n            scrollToBottom('auto')\n          }\n        })\n        setTimeout(cancel, 100)\n      }\n    )\n\n    u.subscribe(u.combineLatest(u.duc(followOutput), atBottomState), ([followOutput, state]) => {\n      if (followOutput && !state.atBottom && state.notAtBottomBecause === 'VIEWPORT_HEIGHT_DECREASING') {\n        scrollToBottom('auto')\n      }\n    })\n\n    return { followOutput }\n  },\n  u.tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n)\n","import {\n  combineLatest,\n  connect,\n  distinctUntilChanged,\n  system,\n  filter,\n  map,\n  pipe,\n  prop,\n  stream,\n  streamFromEmitter,\n  tup,\n} from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { sizeSystem, hasGroups } from './sizeSystem'\nexport interface GroupIndexesAndCount {\n  totalCount: number\n  groupIndices: number[]\n}\n\nexport function groupCountsToIndicesAndCount(counts: number[]) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount)\n      acc.totalCount += groupCount + 1\n      return acc\n    },\n    {\n      totalCount: 0,\n      groupIndices: [],\n    } as GroupIndexesAndCount\n  )\n}\n\nexport const groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = stream<number[]>()\n  const topItemsIndexes = stream<[number]>()\n  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)))\n  connect(pipe(groupIndicesAndCount, map(prop('totalCount'))), totalCount)\n  connect(pipe(groupIndicesAndCount, map(prop('groupIndices'))), groupIndices)\n\n  connect(\n    pipe(\n      combineLatest(scrollTop, sizes, headerHeight),\n      filter(([_, sizes]) => hasGroups(sizes)),\n      map(([scrollTop, state, headerHeight]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop - headerHeight, 0), 'v')[0]),\n      distinctUntilChanged(),\n      map((index) => [index])\n    ),\n    topItemsIndexes\n  )\n\n  return { groupCounts, topItemsIndexes }\n}, tup(sizeSystem, domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { empty, findMaxKeyValue, Range, rangesWithin } from './AATree'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { Item, ListItem, ListRange } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { Data, originalIndexFromItemIndex, SizeState, sizeSystem, hasGroups, rangesWithinOffsets } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { rangeComparator, tupleComparator } from './comparators'\n\nexport type ListItems = ListItem<unknown>[]\nexport interface TopListState {\n  items: ListItems\n  listHeight: number\n}\n\nexport interface ListState {\n  items: ListItems\n  topItems: ListItems\n  topListHeight: number\n  offsetTop: number\n  offsetBottom: number\n  top: number\n  bottom: number\n  totalCount: number\n}\n\nfunction probeItemSet(index: number, sizes: SizeState, data: Data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes)\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0]\n\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] },\n    ]\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }]\n}\n\nconst EMPTY_LIST_STATE: ListState = {\n  items: [] as ListItems,\n  topItems: [] as ListItems,\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n}\n\nfunction transposeItems(items: Item<any>[], sizes: SizeState, firstItemIndex: number): ListItems {\n  if (items.length === 0) {\n    return []\n  }\n\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }))\n  }\n\n  const startIndex = items[0].index\n  const endIndex = items[items.length - 1].index\n\n  const transposedItems = [] as ListItems\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex)\n  let currentRange: Range<number> | undefined = undefined\n  let currentGroupIndex = 0\n\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift()!\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start)\n    }\n\n    let transposedItem: { type: 'group'; index: number } | { index: number; groupIndex: number }\n\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: 'group' as const,\n        index: currentGroupIndex,\n      }\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex,\n      }\n    }\n\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data,\n    })\n  }\n\n  return transposedItems\n}\n\nexport function buildListState(\n  items: Item<any>[],\n  topItems: Item<any>[],\n  totalCount: number,\n  sizes: SizeState,\n  firstItemIndex: number\n): ListState {\n  const { lastSize, lastOffset, lastIndex } = sizes\n  let offsetTop = 0\n  let bottom = 0\n\n  if (items.length > 0) {\n    offsetTop = items[0].offset\n    const lastItem = items[items.length - 1]\n    bottom = lastItem.offset + lastItem.size\n  }\n\n  const total = lastOffset + (totalCount - lastIndex) * lastSize\n  const top = offsetTop\n  const offsetBottom = total - bottom\n\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n  }\n}\n\nexport const listStateSystem = u.system(\n  ([\n    { sizes, totalCount, data, firstItemIndex },\n    groupedListSystem,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n  ]) => {\n    const topItemsIndexes = u.statefulStream<Array<number>>([])\n    const itemsRendered = u.stream<ListItems>()\n\n    u.connect(groupedListSystem.topItemsIndexes, topItemsIndexes)\n\n    const listState = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          didMount,\n          u.duc(visibleRange),\n          u.duc(totalCount),\n          u.duc(sizes),\n          u.duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          u.duc(topItemsIndexes),\n          u.duc(firstItemIndex),\n          data\n        ),\n        u.filter(([mount]) => mount),\n        u.map(\n          ([\n            ,\n            [startOffset, endOffset],\n            totalCount,\n            sizes,\n            initialTopMostItemIndex,\n            scrolledToInitialItem,\n            topItemsIndexes,\n            firstItemIndex,\n            data,\n          ]) => {\n            const sizesValue = sizes\n            const { sizeTree, offsetTree } = sizesValue\n\n            if (totalCount === 0 || (startOffset === 0 && endOffset === 0)) {\n              return EMPTY_LIST_STATE\n            }\n\n            if (empty(sizeTree)) {\n              return buildListState(probeItemSet(initialTopMostItemIndex, sizesValue, data), [], totalCount, sizesValue, firstItemIndex)\n            }\n\n            const topItems = [] as Item<any>[]\n\n            if (topItemsIndexes.length > 0) {\n              const startIndex = topItemsIndexes[0]\n              const endIndex = topItemsIndexes[topItemsIndexes.length - 1]\n              let offset = 0\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value\n                const rangeStartIndex = Math.max(range.start, startIndex)\n                const rangeEndIndex = Math.min(range.end, endIndex)\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            }\n\n            // If the list hasn't scrolled to the initial item because the initial item was set,\n            // render empty list.\n            //\n            // This is a condition to be evaluated past the probe check, do not merge\n            // with the totalCount check above\n            if (!scrolledToInitialItem) {\n              return buildListState([], topItems, totalCount, sizesValue, firstItemIndex)\n            }\n\n            const minStartIndex = topItemsIndexes.length > 0 ? topItemsIndexes[topItemsIndexes.length - 1] + 1 : 0\n\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex)\n            if (offsetPointRanges.length === 0) {\n              return null\n            }\n\n            const maxIndex = totalCount - 1\n\n            const items = u.tap([] as Item<any>[], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value\n                let offset = point.offset\n                let rangeStartIndex = range.start\n                const size = point.size\n\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset) / size)\n                  offset += (rangeStartIndex - range.start) * size\n                }\n\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size\n                  rangeStartIndex = minStartIndex\n                }\n\n                const endIndex = Math.min(range.end, maxIndex)\n\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break\n                  }\n\n                  result.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            })\n\n            return buildListState(items, topItems, totalCount, sizesValue, firstItemIndex)\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        u.filter((value) => value !== null),\n        u.distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    )\n\n    u.connect(\n      u.pipe(\n        data,\n        u.filter((data) => data !== undefined),\n        u.map((data) => data!.length)\n      ),\n      totalCount\n    )\n\n    u.connect(u.pipe(listState, u.map(u.prop('topListHeight'))), topListHeight)\n    u.connect(topListHeight, rangeTopListHeight)\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    )\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => state.items)\n      ),\n      itemsRendered\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount, data),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].originalIndex === totalCount - 1),\n        u.map(([, totalCount, data]) => [totalCount - 1, data] as [number, unknown[]]),\n        u.distinctUntilChanged(tupleComparator),\n        u.map(([count]) => count as number)\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.throttleTime(200),\n        u.filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length\n        }),\n        u.map(({ items }) => items[0].index),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          } as ListRange\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, ...stateFlags }\n  },\n  u.tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem\n  ),\n  { singleton: true }\n)\n","export function simpleMemoize<T extends () => any>(func: T): T {\n  let called = false\n  let result: unknown\n\n  return (() => {\n    if (!called) {\n      called = true\n      result = func()\n    }\n    return result\n  }) as T\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem, buildListState } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialItemCountSystem = u.system(\n  ([{ sizes, firstItemIndex, data }, { listState }, { didMount }]) => {\n    const initialItemCount = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.withLatestFrom(sizes, firstItemIndex, data),\n        u.map(([[, count], sizes, firstItemIndex, data = []]) => {\n          let includedGroupsCount = 0\n          if (sizes.groupIndices.length > 0) {\n            for (const index of sizes.groupIndices) {\n              if (index - includedGroupsCount >= count) {\n                break\n              }\n              includedGroupsCount++\n            }\n          }\n          const adjustedCount = count + includedGroupsCount\n          const items = Array.from({ length: adjustedCount }).map((_, index) => ({ index, size: 0, offset: 0, data: data[index] }))\n          return buildListState(items, [], adjustedCount, sizes, firstItemIndex)\n        })\n      ),\n      listState\n    )\n\n    return { initialItemCount }\n  },\n  u.tup(sizeSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n)\n","import { connect, system, map, pipe, statefulStream, tup, filter } from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\n\nexport const topItemCountSystem = system(([{ topItemsIndexes }]) => {\n  const topItemCount = statefulStream(0)\n\n  connect(\n    pipe(\n      topItemCount,\n      filter((length) => length > 0),\n      map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  )\n  return { topItemCount }\n}, tup(listStateSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const totalListHeightSystem = u.system(\n  ([{ footerHeight, headerHeight }, { listState }]) => {\n    const totalListHeightChanged = u.stream<number>()\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(footerHeight, headerHeight, listState),\n        u.map(([footerHeight, headerHeight, listState]) => {\n          return footerHeight + headerHeight + listState.offsetBottom + listState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(u.duc(totalListHeight), totalListHeightChanged)\n\n    return { totalListHeight, totalListHeightChanged }\n  },\n  u.tup(domIOSystem, listStateSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { UP, stateFlagsSystem } from './stateFlagsSystem'\nimport { ListItem } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\n/**\n * Fixes upward scrolling by calculating and compensation from changed item heights, using scrollBy.\n */\nexport const upwardScrollFixSystem = u.system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, atBottomState, scrollDirection, lastJumpDueToItemResize },\n    { listState },\n    { beforeUnshiftWith, sizes },\n    { log },\n  ]) => {\n    const deviationOffset = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.withLatestFrom(lastJumpDueToItemResize),\n        u.scan(\n          ([, prevItems, prevTotalCount], [{ items, totalCount }, lastJumpDueToItemResize]) => {\n            let newDev = 0\n            if (prevTotalCount === totalCount) {\n              if (prevItems.length > 0 && items.length > 0) {\n                const firstItemIndex = items[0].originalIndex\n                const prevFirstItemIndex = prevItems[0].originalIndex\n                const atStart = firstItemIndex === 0 && prevFirstItemIndex === 0\n                const onlyItem = items.length === 1\n\n                if (!atStart) {\n                  for (let index = items.length - 1; index >= 0; index--) {\n                    const item = items[index]\n\n                    const prevItem = prevItems.find((pItem) => pItem.originalIndex === item.originalIndex)\n\n                    if (!prevItem) {\n                      continue\n                    }\n\n                    if (item.offset !== prevItem.offset || onlyItem) {\n                      newDev = item.offset - prevItem.offset + item.size - prevItem.size\n                      break\n                    }\n                  }\n                }\n              }\n\n              if (newDev !== 0) {\n                newDev += lastJumpDueToItemResize\n              }\n            }\n\n            return [newDev, items, totalCount] as [number, ListItem<any>[], number]\n          },\n          [0, [], 0] as [number, ListItem<any>[], number]\n        ),\n        u.filter(([amount]) => amount !== 0),\n        u.withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, log, isAtBottom, atBottomState),\n        u.filter(([, scrollTop, scrollDirection, scrollingInProgress]) => {\n          // console.log({ amount, scrollTop, scrollDirection, scrollingInProgress, isAtBottom, atBottomState })\n          return !scrollingInProgress && scrollTop !== 0 && scrollDirection === UP // && (isAtBottom ? amount > 0 : true)\n        }),\n        u.map(([[amount], , , , log]) => {\n          log('Upward scrolling compensation', { amount }, LogLevel.DEBUG)\n          return amount\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        deviationOffset,\n        u.withLatestFrom(deviation),\n        u.map(([amount, deviation]) => deviation - amount)\n      ),\n      deviation\n    )\n\n    // when the browser stops scrolling,\n    // restore the position and reset the glitching\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.statefulStreamFromEmitter(isScrolling, false), deviation),\n        u.filter(([is, deviation]) => !is && deviation !== 0),\n        u.map(([_, deviation]) => deviation),\n        u.throttleTime(1)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n          u.publish(deviation, 0)\n        } else {\n          u.publish(deviation, 0)\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n        }\n      }\n    )\n\n    u.connect(\n      u.pipe(\n        beforeUnshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([offset, { lastSize }]) => offset * lastSize)\n      ),\n      deviationOffset\n    )\n\n    return { deviation }\n  },\n  u.tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem)\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const initialScrollTopSystem = u.system(\n  ([{ totalListHeight }, { didMount }, { scrollTo }]) => {\n    const initialScrollTop = u.statefulStream(0)\n\n    u.subscribe(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialScrollTop),\n        u.filter(([, offset]) => offset !== 0),\n        u.map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        u.handleNext(\n          u.pipe(\n            totalListHeight,\n            u.filter((val) => val !== 0)\n          ),\n          () => {\n            setTimeout(() => {\n              u.publish(scrollTo, location)\n            })\n          }\n        )\n      }\n    )\n\n    return {\n      initialScrollTop,\n    }\n  },\n  u.tup(totalListHeightSystem, propsReadySystem, domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const alignToBottomSystem = u.system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = u.statefulStream(false)\n\n    const paddingTopAddition = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        u.filter(([enabled]) => enabled),\n        u.map(([, viewportHeight, totalListHeight]) => {\n          return Math.max(0, viewportHeight - totalListHeight)\n        }),\n        u.distinctUntilChanged()\n      ),\n      0\n    )\n\n    return { alignToBottom, paddingTopAddition }\n  },\n  u.tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromItemIndex, sizeSystem } from './sizeSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { listStateSystem } from './listStateSystem'\n\nexport interface ScrollIntoViewLocation {\n  index: number\n  behavior?: 'auto' | 'smooth'\n  done?: () => void\n}\n\nexport const scrollIntoViewSystem = u.system(\n  ([{ sizes, totalCount }, { scrollTop, viewportHeight, headerHeight, scrollingInProgress }, { scrollToIndex }]) => {\n    const scrollIntoView = u.stream<ScrollIntoViewLocation>()\n\n    u.connect(\n      u.pipe(\n        scrollIntoView,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, scrollTop),\n        u.map(([{ index, behavior = 'auto', done }, sizes, viewportHeight, totalCount, headerHeight, scrollTop]) => {\n          const lastIndex = totalCount - 1\n          let location = null\n          index = originalIndexFromItemIndex(index, sizes)\n          index = Math.max(0, index, Math.min(lastIndex, index))\n\n          const itemTop = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (itemTop < scrollTop) {\n            location = { index, behavior, align: 'start' }\n          } else {\n            const itemBottom = itemTop + findMaxKeyValue(sizes.sizeTree, index)[1]!\n\n            if (itemBottom > scrollTop + viewportHeight) {\n              location = { index, behavior, align: 'end' }\n            }\n          }\n\n          if (location) {\n            done &&\n              u.handleNext(\n                u.pipe(\n                  scrollingInProgress,\n                  u.skip(1),\n                  u.filter((value) => value === false)\n                ),\n                done\n              )\n          } else {\n            done && done()\n          }\n\n          return location\n        }),\n        u.filter((value) => value !== null)\n      ),\n      scrollToIndex\n    )\n\n    return {\n      scrollIntoView,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { followOutputSystem } from './followOutputSystem'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialItemCountSystem } from './initialItemCountSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { topItemCountSystem } from './topItemCountSystem'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { upwardScrollFixSystem } from './upwardScrollFixSystem'\nimport { initialScrollTopSystem } from './initialScrollTopSystem'\nimport { alignToBottomSystem } from './alignToBottomSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollIntoViewSystem } from './scrollIntoViewSystem'\n\n// workaround the growing list of systems below\n// fix this with 4.1 recursive conditional types\nconst featureGroup1System = u.system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n    }\n  },\n  u.tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem\n  )\n)\n\nexport const listSystem = u.system(\n  ([\n    {\n      totalCount,\n      sizeRanges,\n      fixedItemSize,\n      defaultItemSize,\n      trackItemSizes,\n      itemSize,\n      data,\n      firstItemIndex,\n      groupIndices,\n      statefulTotalCount,\n    },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1,\n    log,\n  ]) => {\n    u.connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged)\n    u.connect(u.pipe(featureGroup1.windowViewportRect, u.map(u.prop('visibleHeight'))), domIO.viewportHeight)\n\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      ...followOutput,\n\n      // output\n      statefulTotalCount,\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n      ...log,\n    }\n  },\n  u.tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System,\n    loggerSystem\n  )\n)\n","import { simpleMemoize } from './simpleMemoize'\n\nconst WEBKIT_STICKY = '-webkit-sticky'\nconst STICKY = 'sticky'\n\nexport const positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === 'undefined') {\n    return STICKY\n  }\n  const node = document.createElement('div')\n  node.style.position = WEBKIT_STICKY\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY\n})\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport {\n  compose,\n  connect,\n  getValue,\n  map,\n  pipe,\n  publish,\n  statefulStream,\n  stream,\n  Stream,\n  subscribe,\n  system,\n  tup,\n  withLatestFrom,\n  statefulStreamFromEmitter,\n  distinctUntilChanged,\n  noop,\n} from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, CSSProperties, FC } from 'react'\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport useScrollTop from './hooks/useScrollTop'\nimport useSize from './hooks/useSize'\nimport { Components, ComputeItemKey, GroupContent, GroupItemContent, ItemContent, ListRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { positionStickyCssValue } from './utils/positionStickyCssValue'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { correctItemSize } from './utils/correctItemSize'\n\nexport function identity<T>(value: T) {\n  return value\n}\n\nconst listComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any> | GroupItemContent<any>>((index: number) => `Item ${index}`)\n  const groupContent = statefulStream<GroupContent>((index: number) => `Group ${index}`)\n  const components = statefulStream<Components>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any>>(identity)\n  const headerFooterTag = statefulStream('div')\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof Components>(propName: K, defaultValue: Components[K] | null | 'div' = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp('Footer'),\n    HeaderComponent: distinctProp('Header'),\n    TopItemListComponent: distinctProp('TopItemList'),\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    GroupComponent: distinctProp('Group', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nexport function addDeprecatedAlias<T>(prop: Stream<T>, message: string) {\n  const alias = stream<T>()\n  subscribe(alias, () =>\n    console.warn(`react-virtuoso: You are using a deprecated property. ${message}`, 'color: red;', 'color: inherit;', 'color: blue;')\n  )\n  connect(alias, prop)\n  return alias\n}\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(propsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    group: addDeprecatedAlias(propsSystem.groupContent, 'Rename the %cgroup%c prop to %cgroupContent.'),\n    topItems: addDeprecatedAlias(listSystem.topItemCount, 'Rename the %ctopItems%c prop to %ctopItemCount.'),\n    itemHeight: addDeprecatedAlias(listSystem.fixedItemHeight, 'Rename the %citemHeight%c prop to %cfixedItemHeight.'),\n    scrollingStateChange: addDeprecatedAlias(listSystem.isScrolling, 'Rename the %cscrollingStateChange%c prop to %cisScrolling.'),\n    adjustForPrependedItems: stream<any>(),\n    maxHeightCacheSize: stream<any>(),\n    footer: stream<any>(),\n    header: stream<any>(),\n    HeaderContainer: stream<any>(),\n    FooterContainer: stream<any>(),\n    ItemContainer: stream<any>(),\n    ScrollContainer: stream<any>(),\n    GroupContainer: stream<any>(),\n    ListContainer: stream<any>(),\n    emptyComponent: stream<any>(),\n    scrollSeek: stream<any>(),\n  }\n\n  subscribe(deprecatedProps.adjustForPrependedItems, () => {\n    console.warn(\n      `react-virtuoso: adjustForPrependedItems is no longer supported. Use the firstItemIndex property instead - https://virtuoso.dev/prepend-items.`,\n      'color: red;',\n      'color: inherit;',\n      'color: blue;'\n    )\n  })\n\n  subscribe(deprecatedProps.maxHeightCacheSize, () => {\n    console.warn(`react-virtuoso: maxHeightCacheSize is no longer necessary. Setting it has no effect - remove it from your code.`)\n  })\n\n  subscribe(deprecatedProps.HeaderContainer, () => {\n    console.warn(\n      `react-virtuoso: HeaderContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the header component and pass components.Header to change its contents.`\n    )\n  })\n\n  subscribe(deprecatedProps.FooterContainer, () => {\n    console.warn(\n      `react-virtuoso: FooterContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the footer component and pass components.Footer to change its contents.`\n    )\n  })\n\n  function deprecateComponentProp(stream: Stream<any>, componentName: string, propName: string) {\n    connect(\n      pipe(\n        stream,\n        withLatestFrom(propsSystem.components),\n        map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      propsSystem.components\n    )\n  }\n\n  subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    publish(propsSystem.components, { ...getValue(propsSystem.components), ScrollSeekPlaceholder: placeholder })\n    publish(listSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.footer, 'Footer', 'footer')\n  deprecateComponentProp(deprecatedProps.header, 'Header', 'header')\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n  deprecateComponentProp(deprecatedProps.emptyComponent, 'EmptyPlaceholder', 'emptyComponent')\n  deprecateComponentProp(deprecatedProps.GroupContainer, 'Group', 'GroupContainer')\n\n  return { ...listSystem, ...propsSystem, ...deprecatedProps }\n}, tup(listSystem, listComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => <div style={{ height }}></div>\n\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1, overflowAnchor: 'none' }\n\nexport const Items = React.memo(function VirtuosoItems({ showTopList = false }: { showTopList?: boolean }) {\n  const listState = useEmitterValue('listState')\n  const deviation = useEmitterValue('deviation')\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const groupContent = useEmitterValue('groupContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const ref = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    showTopList ? noop : scrollContainerStateCallback,\n    log,\n    customScrollParent\n  )\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const GroupComponent = useEmitterValue('GroupComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const hasGroups = useEmitterValue('groupIndices').length > 0\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n\n  const containerStyle: CSSProperties = showTopList\n    ? {}\n    : {\n        boxSizing: 'border-box',\n        paddingTop: listState.offsetTop + paddingTopAddition,\n        paddingBottom: listState.offsetBottom,\n        marginTop: deviation,\n      }\n\n  if (!showTopList && statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder)\n  }\n\n  return createElement(\n    ListComponent,\n    { ref, style: containerStyle, 'data-test-id': showTopList ? 'virtuoso-top-item-list' : 'virtuoso-item-list' },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex!\n      const key = computeItemKey(index + firstItemIndex, item.data)\n\n      if (isSeeking) {\n        return createElement(ScrollSeekPlaceholder, {\n          key,\n          index: item.index,\n          height: item.size,\n          type: item.type || 'item',\n          ...(item.type === 'group' ? {} : { groupIndex: item.groupIndex }),\n        })\n      }\n\n      if (item.type === 'group') {\n        return createElement(\n          GroupComponent,\n          {\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            style: GROUP_STYLE,\n          } as any,\n          groupContent(item.index)\n        )\n      } else {\n        return createElement(\n          ItemComponent,\n          {\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            'data-item-group-index': item.groupIndex,\n            style: { overflowAnchor: 'none' },\n          } as any,\n          hasGroups\n            ? (itemContent as GroupItemContent<any>)(item.index, item.groupIndex!, item.data)\n            : (itemContent as ItemContent<any>)(item.index, item.data)\n        )\n      }\n    })\n  )\n})\n\nexport const scrollerStyle: CSSProperties = {\n  height: '100%',\n  outline: 'none',\n  overflowY: 'auto',\n  position: 'relative',\n  WebkitOverflowScrolling: 'touch',\n}\n\nexport const viewportStyle: CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  top: 0,\n}\n\nconst topItemListStyle: CSSProperties = {\n  width: '100%',\n  position: positionStickyCssValue(),\n  top: 0,\n}\n\nconst Header: FC = React.memo(function VirtuosoHeader() {\n  const Header = useEmitterValue('HeaderComponent')\n  const headerHeight = usePublisher('headerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => headerHeight(correctItemSize(el, 'height')))\n  return Header ? createElement(headerFooterTag, { ref }, createElement(Header)) : null\n})\n\nconst Footer: FC = React.memo(function VirtuosoFooter() {\n  const Footer = useEmitterValue('FooterComponent')\n  const footerHeight = usePublisher('footerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => footerHeight(correctItemSize(el, 'height')))\n  return Footer ? createElement(headerFooterTag, { ref }, createElement(Footer)) : null\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nexport function buildScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('scrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const scrollerRefCallback = useEmitterValue('scrollerRef')\n\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    )\n\n    useEmitter('scrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef as React.MutableRefObject<HTMLDivElement | null>,\n        style: { ...scrollerStyle, ...style },\n        'data-test-id': 'virtuoso-scroller',\n        //@ts-expect-error what?\n        'data-virtuoso-scroller': 'true',\n        tabIndex: 0,\n        ...props,\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nexport function buildWindowScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('windowScrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const totalListHeight = useEmitterValue('totalListHeight')\n    const deviation = useEmitterValue('deviation')\n    const customScrollParent = useEmitterValue('customScrollParent')\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      noop,\n      customScrollParent\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      scrollerRef.current = customScrollParent ? customScrollParent : window\n      return () => {\n        scrollerRef.current = null\n      }\n    }, [scrollerRef, customScrollParent])\n\n    useEmitter('windowScrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        style: { position: 'relative', ...style, ...(totalListHeight !== 0 ? { height: totalListHeight + deviation } : {}) },\n        //@ts-expect-error what?\n        'data-virtuoso-scroller': 'true',\n        ...props,\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nconst Viewport: FC = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TopItemListContainer: FC = ({ children }) => {\n  const TopItemList = useEmitterValue('TopItemListComponent')\n  const headerHeight = useEmitterValue('headerHeight')\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` }\n  return createElement(TopItemList || 'div', { style }, children)\n}\n\nconst ListRoot: FC<ListRootProps> = React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const showTopList = useEmitterValue('topItemsIndexes').length > 0\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <Header />\n        <Items />\n        <Footer />\n      </TheViewport>\n      {showTopList && (\n        <TopItemListContainer>\n          <Items showTopList={true} />\n        </TopItemListContainer>\n      )}\n    </TheScroller>\n  )\n})\n\nexport type ListHandle = RefHandle<typeof List>\n\nexport const { Component: List, usePublisher, useEmitterValue, useEmitter } = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      groupContent: 'groupContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      headerFooterTag: 'headerFooterTag',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n\n      // deprecated\n      item: 'item',\n      group: 'group',\n      topItems: 'topItems',\n      itemHeight: 'itemHeight',\n      scrollingStateChange: 'scrollingStateChange',\n      maxHeightCacheSize: 'maxHeightCacheSize',\n      footer: 'footer',\n      header: 'header',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      GroupContainer: 'GroupContainer',\n      emptyComponent: 'emptyComponent',\n      HeaderContainer: 'HeaderContainer',\n      FooterContainer: 'FooterContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      adjustForPrependedItems: 'adjustForPrependedItems',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  ListRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\n\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC } from 'react'\nimport { gridSystem } from './gridSystem'\nimport useSize from './hooks/useSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { GridComponents, GridComputeItemKey, GridItemContent, GridRootProps } from './interfaces'\nimport { addDeprecatedAlias, buildScroller, buildWindowScroller, identity, viewportStyle } from './List'\n\nconst gridComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<GridItemContent>((index) => `Item ${index}`)\n  const components = u.statefulStream<GridComponents>({})\n  const itemClassName = u.statefulStream('virtuoso-grid-item')\n  const listClassName = u.statefulStream('virtuoso-grid-list')\n  const computeItemKey = u.statefulStream<GridComputeItemKey>(identity)\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof GridComponents>(propName: K, defaultValue: GridComponents[K] | null | 'div' = null) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    scrollerRef,\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder', 'div'),\n  }\n})\n\nconst combinedSystem = u.system(([gridSystem, gridComponentPropsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(gridComponentPropsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    ItemContainer: u.stream<any>(),\n    ScrollContainer: u.stream<any>(),\n    ListContainer: u.stream<any>(),\n    emptyComponent: u.stream<any>(),\n    scrollSeek: u.stream<any>(),\n  }\n\n  function deprecateComponentProp(stream: u.Stream<any>, componentName: string, propName: string) {\n    u.connect(\n      u.pipe(\n        stream,\n        u.withLatestFrom(gridComponentPropsSystem.components),\n        u.map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      gridComponentPropsSystem.components\n    )\n  }\n\n  u.subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    u.publish(gridComponentPropsSystem.components, {\n      ...u.getValue(gridComponentPropsSystem.components),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ScrollSeekPlaceholder: placeholder,\n    })\n    u.publish(gridSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n\n  return { ...gridSystem, ...gridComponentPropsSystem, ...deprecatedProps }\n}, u.tup(gridSystem, gridComponentPropsSystem))\n\nconst GridItems: FC = React.memo(function GridItems() {\n  const gridState = useEmitterValue('gridState')\n  const listClassName = useEmitterValue('listClassName')\n  const itemClassName = useEmitterValue('itemClassName')\n  const itemContent = useEmitterValue('itemContent')\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const scrollHeightCallback = usePublisher('scrollHeight')\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder')!\n\n  const itemDimensions = usePublisher('itemDimensions')\n\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement!.parentElement!.scrollHeight\n    scrollHeightCallback(scrollHeight)\n    const firstItem = el.firstChild as HTMLElement\n    if (firstItem) {\n      itemDimensions(firstItem.getBoundingClientRect())\n    }\n  })\n\n  return createElement(\n    ListComponent,\n    { ref: listRef, className: listClassName, style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom } },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index)\n      return isSeeking\n        ? createElement(ScrollSeekPlaceholder, { key, index: item.index, height: gridState.itemHeight, width: gridState.itemWidth })\n        : createElement(ItemComponent, { className: itemClassName, 'data-index': item.index, key }, itemContent(item.index))\n    })\n  )\n})\n\nconst Viewport: FC = ({ children }) => {\n  const viewportDimensions = usePublisher('viewportDimensions')\n\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect())\n  })\n\n  return (\n    <div style={viewportStyle} ref={viewportRef}>\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle}>\n      {children}\n    </div>\n  )\n}\n\nconst GridRoot: FC<GridRootProps> = React.memo(function GridRoot({ ...props }) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <GridItems />\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nconst { Component: Grid, usePublisher, useEmitterValue, useEmitter } = systemToComponent(\n  combinedSystem,\n  {\n    optional: {\n      totalCount: 'totalCount',\n      overscan: 'overscan',\n      itemContent: 'itemContent',\n      components: 'components',\n      computeItemKey: 'computeItemKey',\n      initialItemCount: 'initialItemCount',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      listClassName: 'listClassName',\n      itemClassName: 'itemClassName',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n\n      // deprecated\n      item: 'item',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      scrollToIndex: 'scrollToIndex',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n    },\n  },\n  GridRoot\n)\n\nexport type foo<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer Handle>> ? Handle : never\n\nexport type GridHandle = RefHandle<typeof Grid>\nexport { Grid }\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport { map, pipe, statefulStream, system, tup, statefulStreamFromEmitter, distinctUntilChanged, noop, compose } from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC } from 'react'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport { ComputeItemKey, ItemContent, FixedHeaderContent, TableComponents, TableRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { identity, buildScroller, buildWindowScroller, viewportStyle } from './List'\nimport useSize from './hooks/useSize'\nimport { correctItemSize } from './utils/correctItemSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\n\nconst tableComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any>>((index: number) => <td>Item ${index}</td>)\n  const fixedHeaderContent = statefulStream<FixedHeaderContent>(null)\n  const components = statefulStream<TableComponents>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any>>(identity)\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof TableComponents>(\n    propName: K,\n    defaultValue: TableComponents[K] | null | 'thead' | 'table' | 'tbody' | 'tr' | 'div' = null\n  ) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    itemContent,\n    fixedHeaderContent,\n    components,\n    computeItemKey,\n    scrollerRef,\n    TableComponent: distinctProp('Table', 'table'),\n    TableHeadComponent: distinctProp('TableHead', 'thead'),\n    TableBodyComponent: distinctProp('TableBody', 'tbody'),\n    TableRowComponent: distinctProp('TableRow', 'tr'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  return { ...listSystem, ...propsSystem }\n}, tup(listSystem, tableComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height }}></td>\n  </tr>\n)\n\nconst FillerRow = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height: height, padding: 0, border: 0 }}></td>\n  </tr>\n)\n\nexport const Items = React.memo(function VirtuosoItems() {\n  const listState = useEmitterValue('listState')\n  const deviation = useEmitterValue('deviation')\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const ref = useChangedListContentsSizes(sizeRanges, itemSize, trackItemSizes, scrollContainerStateCallback, log, customScrollParent)\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const TableBodyComponent = useEmitterValue('TableBodyComponent')!\n  const TableRowComponent = useEmitterValue('TableRowComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n\n  if (statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder)\n  }\n\n  const paddingTop = listState.offsetTop + paddingTopAddition + deviation\n  const paddingBottom = listState.offsetBottom\n\n  const paddingTopEl = paddingTop > 0 ? <FillerRow height={paddingTop} key=\"padding-top\" /> : null\n\n  const paddingBottomEl = paddingBottom > 0 ? <FillerRow height={paddingBottom} key=\"padding-bottom\" /> : null\n\n  const items = listState.items.map((item) => {\n    const index = item.originalIndex!\n    const key = computeItemKey(index + firstItemIndex, item.data)\n\n    if (isSeeking) {\n      return createElement(ScrollSeekPlaceholder, {\n        key,\n        index: item.index,\n        height: item.size,\n        type: item.type || 'item',\n      })\n    }\n    return createElement(\n      TableRowComponent,\n      {\n        key,\n        'data-index': index,\n        'data-known-size': item.size,\n        'data-item-index': item.index,\n        style: { overflowAnchor: 'none' },\n      } as any,\n      itemContent(item.index, item.data)\n    )\n  })\n\n  return createElement(\n    TableBodyComponent,\n    { ref, 'data-test-id': 'virtuoso-item-list' },\n\n    [paddingTopEl, ...items, paddingBottomEl]\n  )\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nconst Viewport: FC = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TableRoot: FC<TableRootProps> = React.memo(function TableVirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const fixedHeaderHeight = usePublisher('fixedHeaderHeight')\n  const fixedHeaderContent = useEmitterValue('fixedHeaderContent')\n  const theadRef = useSize(compose(fixedHeaderHeight, (el) => correctItemSize(el, 'height')))\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  const TheTable = useEmitterValue('TableComponent')\n  const TheTHead = useEmitterValue('TableHeadComponent')\n\n  const theHead = fixedHeaderContent\n    ? React.createElement(\n        TheTHead!,\n        { key: 'TableHead', style: { zIndex: 1, position: 'sticky', top: 0 }, ref: theadRef } as any,\n        fixedHeaderContent()\n      )\n    : null\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        {React.createElement(TheTable!, { style: { borderSpacing: 0 } } as any, [theHead, <Items key=\"TableBody\" />])}\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nexport type TableHandle = RefHandle<typeof Table>\n\nexport const { Component: Table, usePublisher, useEmitterValue, useEmitter } = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      fixedHeaderContent: 'fixedHeaderContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  TableRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { ForwardRefExoticComponent, ReactElement, Ref } from 'react'\nimport { Grid, GridHandle } from './Grid'\n\nimport {\n  Components,\n  ComputeItemKey,\n  FollowOutput,\n  GridComponents,\n  GridComputeItemKey,\n  GridItemContent,\n  GroupContent,\n  GroupItemContent,\n  IndexLocationWithAlign,\n  ItemContent,\n  ListItem,\n  ListRange,\n  ScrollSeekConfiguration,\n  TableComponents,\n  FixedHeaderContent,\n} from './interfaces'\nimport { List, ListHandle } from './List'\nimport { Table, TableHandle } from './Table'\nimport { ScrollIntoViewLocation } from './scrollIntoViewSystem'\ntype CompProps<T> = T extends ForwardRefExoticComponent<infer R> ? R : never\ntype ListProps = CompProps<typeof List>\ntype GridProps = CompProps<typeof Grid>\n\nexport interface VirtuosoProps<D> extends Omit<ListProps, 'groupCounts' | 'groupContent' | 'itemsRendered'> {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in `react-window`).\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set the amount of items to remain fixed at the top of the list.\n   *\n   * For a header that scrolls away when scrolling, check the `components.Header` property.\n   */\n  topItemCount?: number\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   */\n  initialTopMostItemIndex?: number\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: Components\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Set to customize the wrapper tag for the header and footer components (default is `div`).\n   */\n  headerFooterTag?: string\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the list won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n}\n\nexport interface GroupedVirtuosoProps<D>\n  extends Omit<VirtuosoProps<D>, 'totalCount' | 'itemContent'>,\n    Pick<ListProps, 'groupCounts' | 'groupContent'> {\n  /**\n   * Specifies the amount of items in each group (and, actually, how many groups are there).\n   * For example, passing [20, 30] will display 2 groups with 20 and 30 items each.\n   */\n  groupCounts?: number[]\n\n  /**\n   * Specifies how each each group header gets rendered. The callback receives the zero-based index of the group.\n   */\n  groupContent?: GroupContent\n\n  /**\n   * Specifies how each each item gets rendered.\n   */\n  itemContent?: GroupItemContent<D>\n}\n\nexport interface TableVirtuosoProps<D> extends Omit<VirtuosoProps<D>, 'components' | 'headerFooterTag' | 'topItemCount'> {\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the table.\n   */\n  components?: TableComponents\n  /**\n   * Set the contents of the table header.\n   */\n  fixedHeaderContent?: FixedHeaderContent\n\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in `react-window`).\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   */\n  initialTopMostItemIndex?: number\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the table won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n}\n\nexport interface VirtuosoGridProps extends GridProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: GridItemContent\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: GridComponents\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: GridComputeItemKey\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | null) => any\n\n  /**\n   * Sets the className for the list DOM element\n   */\n  listClassName?: string\n\n  /**\n   * Sets the grid items' className\n   */\n  itemClassName?: string\n\n  /**\n   * Uses the document scroller rather than wrapping the grid in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the grid won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n}\n\nexport interface VirtuosoHandle extends ListHandle {\n  /**\n   * Scrolls the component to the specified item index. See {{IndexLocationWithAlign}} for more options.\n   */\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  /**\n   * Scrolls the item into view if necessary. See [the website example](http://virtuoso.dev/keyboard-navigation/) for an implementation.\n   */\n  scrollIntoView(location: ScrollIntoViewLocation): void\n  /**\n   * Scrolls the component to the specified location. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollTo(location: ScrollToOptions): void\n  /**\n   * Scrolls the component with the specified amount. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface GroupedVirtuosoHandle extends ListHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface VirtuosoGridHandle extends GridHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport const Virtuoso = List as <D extends unknown = any>(props: VirtuosoProps<D> & { ref?: Ref<VirtuosoHandle> }) => ReactElement\nexport const GroupedVirtuoso = List as <D extends unknown = any>(\n  props: GroupedVirtuosoProps<D> & { ref?: Ref<GroupedVirtuosoHandle> }\n) => ReactElement\nexport const TableVirtuoso = Table as <D extends unknown = any>(props: TableVirtuosoProps<D> & { ref?: Ref<TableHandle> }) => ReactElement\nexport const VirtuosoGrid = Grid as (props: VirtuosoGridProps & { ref?: Ref<VirtuosoGridHandle> }) => ReactElement\n"],"names":["tupleComparator","prev","current","rangeComparator","next","startIndex","endIndex","LogLevel","domIOSystem","u","scrollContainerState","scrollTop","deviation","smoothScrollTargetReached","statefulScrollTop","viewportHeight","scrollHeight","headerHeight","footerHeight","scrollTo","scrollBy","scrollingInProgress","singleton","CONSOLE_METHOD_MAP","DEBUG","INFO","WARN","ERROR","loggerSystem","logLevel","log","label","message","level","globalThis","window","console","propsReadySystem","propsReady","didMount","ready","value","getValue","tup","UP","INITIAL_BOTTOM_STATE","atBottom","notAtBottomBecause","state","offsetBottom","stateFlagsSystem","isAtBottom","isAtTop","atBottomStateChange","atTopStateChange","atBottomThreshold","isScrolling","isScrollingBy","top","atBottomState","atBottomBecause","scrollTopDelta","lastJumpDueToItemResize","jump","changed","setTimeout","scrollDirection","acc","direction","prevScrollTop","scrollVelocity","scrollSeekSystem","isSeeking","rangeChanged","scrollSeekConfiguration","speed","config","range","enter","exit","change","scrollSeekRangeChanged","NIL_NODE","lvl","newAANode","k","v","l","r","empty","node","newTree","remove","key","last","adjust","clone","deleteLast","findMaxKeyValue","field","Infinity","undefined","insert","split","skew","rebalance","walkWithin","start","end","result","concat","push","walk","args","isSingle","Error","rl","rlvl","rangesWithin","arrayToRanges","index","items","parser","length","i","nextIndex","nextValue","findIndexOfClosestSmallerOrEqual","comparator","Math","floor","match","join","findClosestSmallerOrEqual","correctItemSize","el","dimension","round","getBoundingClientRect","rangeIncludes","refRange","size","indexComparator","itemIndex","offsetComparator","offset","itemOffset","offsetPointParser","point","sizeStateReducer","ranges","groupIndices","sizeTree","offsetTree","newSizeTree","syncStart","groupSize","itemSize","reduce","tree","groupIndex","min","overlappingRanges","some","firstPassDone","shouldInsert","rangeStart","rangeEnd","rangeValue","insertRanges","prevIndex","prevSize","prevAOffset","startAIndex","arrayBinarySearch","kv","slice","aOffset","groupOffsetTree","offsetOf","lastIndex","lastOffset","lastSize","originalIndexFromItemIndex","sizes","hasGroups","groupOffset","SIZE_MAP","offsetHeight","offsetWidth","sizeSystem","sizeRanges","totalCount","statefulTotalCount","unshiftWith","firstItemIndex","fixedItemSize","defaultItemSize","data","initial","indexes","idx","trackItemSizes","listRefresh","newSizes","diff","val","beforeUnshiftWith","SUPPORTS_SCROLL_TO_OPTIONS","document","documentElement","style","normalizeIndexLocation","location","align","behavior","scrollToIndexSystem","scrollToIndex","topListHeight","unsubscribeNextListRefresh","cleartTimeoutRef","unsubscribeListRefresh","cleanup","clearTimeout","normalLocation","max","retry","listChanged","done","timeoutRef","getOverscan","overscan","main","reverse","getViewportIncrease","sizeRangeSystem","listBoundary","fixedHeaderHeight","increaseViewportBy","visibleRange","listTop","listBottom","stickyHeaderHeight","headerVisible","topViewportAddition","bottomViewportAddition","windowScrollerSystem","windowScrollContainerState","windowViewportRect","windowScrollTo","useWindowScroll","customScrollParent","offsetTop","INITIAL_GRID_STATE","bottom","itemHeight","itemWidth","PROBE_GRID_STATE","ceil","hackFloor","buildItems","Array","from","map","_","gridSystem","stateFlags","scrollSeek","initialItemCount","gridState","viewportDimensions","height","width","itemDimensions","startOffset","endOffset","item","viewport","viewportWidth","perRow","gridLayout","endReached","startReached","itemTop","totalListHeight","viewportInfo","visibleWidth","visibleHeight","useSizeWithElRef","callback","enabled","ref","useRef","callbackRef","_el","ResizeObserver","observer","entries","element","target","offsetParent","elRef","observe","unobserve","useSize","useWindowViewportRectRef","calculateInfo","useCallback","rect","customScrollParentRect","deltaTop","innerHeight","pageYOffset","scrollAndResizeEventHandler","useEffect","addEventListener","removeEventListener","useIsomorphicLayoutEffect","useLayoutEffect","useChangedListContentsSizes","scrollContainerStateCallback","children","results","child","dataset","parseInt","knownSize","parseFloat","lastResult","getChangedChildSizes","scrollableElement","parentElement","firstElementChild","useScrollTop","scrollerElement","scrollerRefCallback","scrollerRef","scrollTopTarget","handler","ev","localRef","passive","scrollByCallback","scrollToCallback","isSmooth","abs","initialTopMostItemIndexSystem","scrolledToInitialItem","initialTopMostItemIndex","normalizeFollowOutput","follow","followOutputSystem","followOutput","pendingScrollHandle","scrollToBottom","followOutputBehavior","shouldFollow","behaviorFromFollowOutput","refreshed","cancel","groupCountsToIndicesAndCount","counts","groupCount","groupedListSystem","system","groupCounts","stream","topItemsIndexes","groupIndicesAndCount","streamFromEmitter","pipe","connect","prop","combineLatest","filter","distinctUntilChanged","EMPTY_LIST_STATE","topItems","transposeItems","originalIndex","transposedItems","groupRanges","currentRange","currentGroupIndex","shift","indexOf","type","buildListState","lastItem","func","called","listStateSystem","rangeTopListHeight","itemsRendered","listState","sizesValue","probeItemSet","rangeStartIndex","rangeEndIndex","minStartIndex","offsetPointRanges","endValue","rangesWithinOffsets","maxIndex","initialItemCountSystem","count","includedGroupsCount","adjustedCount","topItemCountSystem","topItemCount","statefulStream","totalListHeightSystem","totalListHeightChanged","upwardScrollFixSystem","deviationOffset","prevItems","newDev","onlyItem","prevItem","find","pItem","amount","initialScrollTopSystem","initialScrollTop","alignToBottomSystem","alignToBottom","paddingTopAddition","scrollIntoViewSystem","scrollIntoView","featureGroup1System","listSystem","domIO","flags","featureGroup1","fixedItemHeight","defaultItemHeight","positionStickyCssValue","createElement","position","identity","listComponentPropsSystem","itemContent","groupContent","components","computeItemKey","headerFooterTag","noop","distinctProp","propName","defaultValue","statefulStreamFromEmitter","FooterComponent","HeaderComponent","TopItemListComponent","ListComponent","ItemComponent","GroupComponent","ScrollerComponent","EmptyPlaceholder","ScrollSeekPlaceholder","addDeprecatedAlias","alias","subscribe","warn","combinedSystem","propsSystem","deprecatedProps","group","scrollingStateChange","adjustForPrependedItems","maxHeightCacheSize","footer","header","HeaderContainer","FooterContainer","ItemContainer","ScrollContainer","GroupContainer","ListContainer","emptyComponent","deprecateComponentProp","componentName","withLatestFrom","comp","placeholder","publish","DefaultScrollSeekPlaceholder","React","GROUP_STYLE","zIndex","overflowAnchor","Items","showTopList","useEmitterValue","usePublisher","windowScrollContainerStateCallback","_scrollContainerStateCallback","containerStyle","boxSizing","paddingTop","paddingBottom","marginTop","data-test-id","data-index","data-known-size","data-item-index","data-item-group-index","scrollerStyle","outline","overflowY","WebkitOverflowScrolling","viewportStyle","topItemListStyle","Header","Footer","buildScroller","useEmitter","props","data-virtuoso-scroller","tabIndex","buildWindowScroller","Viewport","viewportRef","compose","WindowViewport","TopItemListContainer","TopItemList","systemToComponent","required","optional","methods","events","TheViewport","WindowScroller","Scroller","List","Component","gridComponentPropsSystem","itemClassName","listClassName","GridItems","scrollHeightCallback","listRef","firstItem","firstChild","className","Grid","tableComponentPropsSystem","fixedHeaderContent","TableComponent","TableHeadComponent","TableBodyComponent","TableRowComponent","FillerRow","padding","border","paddingTopEl","paddingBottomEl","theadRef","TheScroller","TheTable","TheTHead","theHead","borderSpacing","Table","Virtuoso","GroupedVirtuoso","TableVirtuoso","VirtuosoGrid"],"mappings":"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"}